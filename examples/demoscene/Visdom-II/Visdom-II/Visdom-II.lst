mads 2.1.6 build 66 (7 Jun 23)
Source: D:\!Delphi\mads\examples\demoscene\Visdom-II\Visdom-II\Visdom-II.asm
     1
     2 				;	">> VISDOM DEMO PART II <<"_for_the_Halle_Project_93
     3 				;
     4 				;	This is the final fixed single file version I have promised 19 years ago :-)
     5 				;
     6 				;	(c) 25-02-1993 by_JAC! first_version_with_main_effects
     7 				;	(r)_03-03-1993_by_JAC! Wiggle_works_100%.
     8 				;	(r)_07-03-1993_by_JAC! Visdom,Credits_&_Infopart.
     9 				;	(r)_09-03-1993_by-JAC! Ktab_&_ImpRes.
    10 				;	(r)_13-03-1993_by_JAC! Info_V1.1,ImpRes_break.
    11 				;	(f)_16-03-1993_by_JAC! All_texts_written,excluded,encrypted.
    12 				;	(f)_16-03-1993_by_JAC! final_version
    13 				;	(r)_06-08-1995_by_JAC! for Amiga
    14 				;	(r)_28-09-2002 by JAC! for_PC
    15 				;	(r)_17-06-2010 by JAC! wiggle_color_mix_fixed
    16 				;	(r)_22-02-2012 by JAC! fader,decrunch,PAL_and_RAM_size_check_added
    17 				;	(r)_26-02-2012 by JAC! PAL_check_activated_(silly_me)
    18 				;	(r)_05-03-2012 by JAC! NTSC_version_started
    19 				;	(r)_13-03-2012 by JAC! NTSC_version_finished
    20 				;
    21 				;	Wiggle-X-Width: 8 to 64 = 57 Pixels
    22 				;	Secret_key_is_"wudsn ursel"_without_shift_or_control.
    23 				;
    24 				;	Pack with SuperPacker. All bigs segments must be packed using Exomizer with
    25 				;	depack=$b000, buffer=$b100 and decrunch effect code "JSR $3F00".
    26
    27 					opt l+
    28
    29 = 000B			index		= 11		;Hiddencode_register_index.
    30 = 009B			space		= $9b		;Empty_Char_code_offset.
    31 = 00C8			whold		= 200		;Time_to_hold_wiggle.
    32 = 0005			wnumb		= 5		;Number_of_wiggles_shown.
    33 = 0018			sinus_offset	= $18		;Visdom_sine_offset.
    34 = 0065			dli4_y		= 101		;VCOUNT_value_for_scrdl
    35
    36 = 00E0			dliup	= $e0			;DLI_counter.
    37 = 00E1			dliv	= $e1			;DLI_vector_(word)
    38 = 0004			dlip	= $04			;DLI_pointer_(internal).
    39 = 00E4			keyold	= $e4			;Last_pressed_key.
    40 = 00E5			keyind	= $e5			;Keytab_index.
    41 = 00E6			keybrk	= $e6			;"HELP"_pressed.
    42 = 00E7			termin	= $e7			;Scroller_termination.
    43
    44 = 1000			splipic	= $1000			;"Pic:GtiaSplit.pic"
    45 = 1C80			scrdat	= $1c80			;"Dat:Summer.dat"
    46 = 2000			scrchr	= $2000			;"Chr:Summer.chr"
    47 = 2400			vispic	= $2400			;"Pic:VisOne.pic"
    48 = 2E00			sintab1	= $2e00			;"Sin:VisOne.sin"
    49 = 3000			sintab2	= $3000			;"Sin:GtiaSplit.sin"_phasing_1.
    50 = 3100			sintab3	= $3100			;"Sin:GtiaSplit.sin"_phasing_3.
    51 = 3200			sintab4	= $3200			;"Sin:TextBounce.sin"
    52 = 3300			sintab5	= $3300			;"Sin:Sinus256.sin"
    53 = 3400			txtchr	= $3400			;"Chr:HalleChar.chr"
    54 = 3800			imppic	= $3800			;"Pic:Impres9x64.pic"
    55 = EC07			sndinit	= $ec07			;Init_Module.
    56 = FAF3			sndplay	= $faf3			;Play_Module.
    57
    58 = 00E8			scrpos	= $e8			;ScrDat_offset.
    59 = 00E9			scrcnt	= $e9			;ScrDat_offset_counter.
    60 = 00EA			scrsof	= $ea			;Softscroll_value.
    61 = 00EB			scrcod	= $eb			;Char_code.
    62 = 00EC			scrspd	= $ec			;Scroll_speed.
    63 = 00ED			scrcol1	= $ed			;Scroll_Color_1.
    64 = 00EE			scrcol2	= $ee			;Scroll_Color_2.
    65 = 00EF			scrhold	= $ef			;Scroll_hold_counter.
    66
    67 = 00F0			impxpos	= $f0			;ImpRes_X_Position.
    68 = 00F1			impypos	= $f1			;ImpRes_Y_Position.
    69 = 00F2			impsoft	= $f2			;ImpRes_Softscroll_value.
    70 = 00F3			impmode	= $f3			;ImpRes_Scroll_mode.
    71
    72 = 0030			xtab	= $30			;Animated_Sine_value_table,_$80_bytes
    73 = 00F4			wtime	= $f4			;Wiggle_hold_timer.
    74 = 00F5			wnumber	= $f5			;Wiggle_counter.
    75 = 00F6			whell	= $f6			;Wiggle_brightness.
    76 = 00F7			whadd	= $f7			;Wiggle_fadeup.
    77 = 00F8			wcnt1	= $f8			;Wiggle_move_values_(random).
    78 = 00F9			wcnt2	= $f9			;...
    79 = 00FA			wcol1	= $fa			;...
    80 = 00FB			wcol2	= $fb			;...
    81 = 00FC			wadd1	= $fc			;...
    82 = 00FD			wadd2	= $fd			;...
    83 = 00FE			wstep1	= $fe			;...
    84 = 00FF			wstep2	= $ff			;...
    85
    86 = 8000			base	 = $8000
    87 = 8100			btab	 = base+$100		;Branch_offset_table,2x$80_bytes
    88 = 8200			mtab	 = base+$200		;Missle_HPOS_table,2x$80_bytes
    89 = 8300			htab	 = base+$300		;HPOS_conversion_table.
    90 = 8400			wigllo	 = base+$400		;Split.pic_lineoffsets_LO.
    91 = 8500			wiglhi	 = base+$500		;Split.pic_lineoffsets_HI.
    92 = 8600			vftab1	 = base+$600		;Visdom_color_tabs_($40_bytes).
    93 = 8700			vftab2	 = base+$700		;...
    94 = 8800			vftab3	 = base+$800		;...
    95 = 8900			vftab4	 = base+$900		;...
    96 = 8A00			vftab5	 = base+$a00		;...
    97 = 8B00			vftab6	 = base+$b00		;...
    98 = 8C00			scrsm	 = base+$c00		;Scroll_memory_($280_bytes).
    99 = 8F00			textllo	 = base+$f00		;Bouncetext_lineoffsets_LO.
   100 = 8F80			textlhi	 = base+$f80		;Bouncetext_lineoffsets_HI.
   101 = 9000			stab	 = base+$1000		;Stars_X_position.
   102 = 9100			gtab	 = base+$1100		;Stars_X_speed.
   103 = 9200			ktab	 = base+$1200		;Bouncetext_colors.
   104 = 9300			impllo	 = base+$1300		;ImpRes_lineoffsets_LO.
   105 = 9400			implhi	 = base+$1400		;ImpRes_lineoffsets_HI.
   106 = 9500			impdl	 = base+$1500		;ImpRes_DL_(???_bytes).
   107 = A000			impsm	 = base+$2000		;ImpRes_Picture_($1000_bytes).
   108 = B000			lmsrout1 = base+$3000		;Set_LMS_command_Adresses_for_splidl1
   109 = B800			lmsrout2 = base+$3800		;Set_LMS_command_Adresses_for_splidl2.
   110 = C000			lmsrout3 = base+$4000		;Set_LMS_command_Adresses_impdl.
   111 = C800			tsm	 = base+$4800		;Text_SM.
   112
   113 = 00B0			tp	= $b0			;ScrollText_Pointer.
   114 = 00B2			ip	= $b2			;InfoText_Pointer.
   115 = 00B4			p1	= $b4
   116 = 00B6			p2	= $b6
   117 = 00B8			p3	= $b8
   118 = 00BA			p4	= $ba
   119 = 00BC			x1	= $bc
   120 = 00BD			x2	= $bd
   121 = 00BE			x3	= $be
   122 = 00BF			cnt	= $bf
   123
   124 				;================================================================
   125
   126 					.macro org_fill
   127 					.rept :1-*
   128 					.byte 0
   129 					.endr
   130 					org :1
   131 					.endm
   132
   133 				;================================================================
   134
   135 					org $2000	;Version header
   136 FFFF> 2000-2094> 0D 0A + 	.byte 13,10,155
   137 2003 56 69 73 64 6F 6D + 	.byte 'Visdom-II by JAC!/Peter Dell.',13,10,155
   138 2023 4F 72 69 67 69 6E + 	.byte 'Original version released for the Halle Project on 16-03-1993.',13,10,155
   139 2064 54 68 69 73 20 66 + 	.byte 'This fixed version released on 13-03-2012.',13,10,155
   140 2091 FD FD FD 00			.byte 253,253,253,0
   141
   142 				;==========================================================
   143 				; Pre-loader to fade the screen off
   144 				;==========================================================
   145
   146 2095				org $2000	;Init loader
   147
   148 2000				.proc init_loader
   149 2000-20DD> 20 07 20		jsr init_loader_system
   150 2003 20 9B 20			jsr init_loader_fade
   151 2006 60				rts
   152
   153 				; Check if this system has 64k. 
   154 				; If not wait for a key and perform cold start.
   155
   156 2007				.proc init_loader_system
   157 2007 A9 01			lda #1
   158 2009 8D 44 02			sta 580	;Enforce cold start upon reset
   159
   160 200C 78				sei
   161 200D A9 00			lda #0
   162 200F 8D 0E D4			sta $d40e
   163 2012 A0 00			ldy #0
   164 2014 AD 01 D3			lda $d301
   165 2017 48				pha
   166 2018 A9 FE			lda #$fe	;Disable OS ROM
   167 201A 8D 01 D3			sta $d301
   168 201D AE 00 E0			ldx $e000	;Check if writeable
   169 2020 EE 00 E0			inc $e000
   170 2023 EC 00 E0			cpx $e000
   171 2026 D0 01			bne init_loader_system1
   172 2028 C8				iny		;No
   173 2029			init_loader_system1
   174 2029 68				pla
   175 202A 8D 01 D3			sta $d301
   176 202D A9 40			lda #$40
   177 202F 8D 0E D4			sta $d40e
   178 2032 58				cli
   179 2033 C0 00			cpy #0
   180 2035 D0 01			bne init_loader_fail_64k
   181 2037 60				rts
   182
   183 2038			init_loader_fail_64k
   184 2038 A9 0E			lda #14
   185 203A 8D C4 02			sta 708
   186 203D A9 5F 8D 30 02 A9 + 	mwa #init_loader_error_dl $230
   187 2047			init_loader_fail1
   188 2047 18				clc
   189 2048 A5 14			lda 20
   190 204A 6D 0B D4			adc $d40b
   191 204D 8D 0A D4			sta $d40a
   192 2050 8D 1A D0			sta $d01a
   193 2053 AD 0F D2			lda $d20f
   194 2056 29 0C			and #12
   195 2058 C9 0C			cmp #12
   196 205A F0 EB			beq init_loader_fail1
   197 205C 4C 74 E4			jmp $e474
   198 					
   199 205F			init_loader_error_dl
   200 205F 70 70 70 70 70 70 + 	.byte $70,$70,$70,$70,$70,$70,$70,$70,$70,$70,$70,$70
   201 206B 47				.byte $47
   202 206C 73 20			.word init_loader_error_sm1
   203 206E 70 06			.byte $70,$06
   204 2070 41				.byte $41
   205 2071 5F 20			.word init_loader_error_dl
   206
   207 2073			init_loader_error_sm1
   208 2073 00 00 32 25 31 35 + 	.byte "  REQUIRES 64K RAM. "
   209 2087 30 32 25 33 33 00 + 	.byte "PRESS KEY TO REBOOT."
   210 					.endp
   211
   212 				;----------------------------------------------------------------
   213
   214 209B				.proc init_loader_fade
   215 209B A9 00			lda #0
   216 209D 85 BD			sta x2
   217 209F A2 08			ldx #8
   218 20A1			init_loader_fade2
   219 20A1 BD C0 02			lda 704,x
   220 20A4 48				pha
   221 20A5 29 F0			and #$f0
   222 20A7 85 BC			sta x1
   223 20A9 68				pla
   224 20AA 29 0F			and #15
   225 20AC F0 07			beq init_loader_fade3
   226 20AE 38				sec
   227 20AF E9 01			sbc #1
   228 20B1 05 BC			ora x1
   229 20B3 85 BD			sta x2
   230 20B5			init_loader_fade3
   231 20B5 9D C0 02			sta 704,x
   232 20B8 CA				dex
   233 20B9 10 E6			bpl init_loader_fade2
   234 20BB A5 14			lda 20
   235 20BD 18				clc
   236 20BE 69 02			adc #2
   237 20C0			init_loader_fade4
   238 20C0 C5 14			cmp 20
   239 20C2 D0 FC			bne init_loader_fade4
   240 20C4 A5 BD			lda x2
   241 20C6 D0 D3			bne init_loader_fade
   242 					
   243 20C8 A2 1F			ldx #$1f		;Setup PM graphics for STX $D000 in the packer
   244 20CA			init_loader_fade5
   245 20CA 9D 00 D0			sta $d000,x
   246 20CD CA				dex
   247 20CE 10 FA			bpl init_loader_fade5
   248 20D0 A9 80			lda #$80
   249 20D2 8D 0D D0			sta $d00d
   250 20D5 A9 06			lda #6
   251 20D7 8D C0 02			sta 704
   252 20DA 8D 12 D0			sta $d012
   253 20DD 60				rts
   254 					.endp
   255 					.endp
   256
   257 02E2-02E3> 00 20			ini init_loader
   258
   259 				;================================================================
   260
   261 20DE				org $3f00	;Decrunch effect
   262
   263 3F00				.proc decrunch_effect
   264 3F00-3F11> AD 0A D2		lda $d20a	;Noise_effect
   265 3F03 8D 00 D0			sta $d000
   266 3F06 AD 0B D4			lda $d40b
   267 3F09 8D 12 D0			sta $d012
   268 3F0C A9 00			lda #0
   269 3F0E 8D 00 D0			sta $d000
   270 3F11 60				rts
   271 					.endp
   272
   273 				;================================================================
   274
   275 				;	Put_all_the_data_into_a_separate_segment.
   276 3F12				org scrchr
   277 2000-3B3F> 00 00 01 04 + 	ins "Visdom-II-Summer.chr"		; $2000
   278
   279 2400				org vispic
   280 2400 FF FF FF FF FF FF + 	ins "Visdom-II-VisdomSplitLogo.pic"	; $2400
   281
   282 2D88				org_fill sintab1
Macro: ORG_FILL [Source: D:\!Delphi\mads\examples\demoscene\Visdom-II\Visdom-II\Visdom-II.asm]
     2 2D88 00				.BYTE 0
     2 2D89 00				.BYTE 0
     2 2D8A 00				.BYTE 0
     2 2D8B 00				.BYTE 0
     2 2D8C 00				.BYTE 0
     2 2D8D 00				.BYTE 0
     2 2D8E 00				.BYTE 0
     2 2D8F 00				.BYTE 0
     2 2D90 00				.BYTE 0
     2 2D91 00				.BYTE 0
     2 2D92 00				.BYTE 0
     2 2D93 00				.BYTE 0
     2 2D94 00				.BYTE 0
     2 2D95 00				.BYTE 0
     2 2D96 00				.BYTE 0
     2 2D97 00				.BYTE 0
     2 2D98 00				.BYTE 0
     2 2D99 00				.BYTE 0
     2 2D9A 00				.BYTE 0
     2 2D9B 00				.BYTE 0
     2 2D9C 00				.BYTE 0
     2 2D9D 00				.BYTE 0
     2 2D9E 00				.BYTE 0
     2 2D9F 00				.BYTE 0
     2 2DA0 00				.BYTE 0
     2 2DA1 00				.BYTE 0
     2 2DA2 00				.BYTE 0
     2 2DA3 00				.BYTE 0
     2 2DA4 00				.BYTE 0
     2 2DA5 00				.BYTE 0
     2 2DA6 00				.BYTE 0
     2 2DA7 00				.BYTE 0
     2 2DA8 00				.BYTE 0
     2 2DA9 00				.BYTE 0
     2 2DAA 00				.BYTE 0
     2 2DAB 00				.BYTE 0
     2 2DAC 00				.BYTE 0
     2 2DAD 00				.BYTE 0
     2 2DAE 00				.BYTE 0
     2 2DAF 00				.BYTE 0
     2 2DB0 00				.BYTE 0
     2 2DB1 00				.BYTE 0
     2 2DB2 00				.BYTE 0
     2 2DB3 00				.BYTE 0
     2 2DB4 00				.BYTE 0
     2 2DB5 00				.BYTE 0
     2 2DB6 00				.BYTE 0
     2 2DB7 00				.BYTE 0
     2 2DB8 00				.BYTE 0
     2 2DB9 00				.BYTE 0
     2 2DBA 00				.BYTE 0
     2 2DBB 00				.BYTE 0
     2 2DBC 00				.BYTE 0
     2 2DBD 00				.BYTE 0
     2 2DBE 00				.BYTE 0
     2 2DBF 00				.BYTE 0
     2 2DC0 00				.BYTE 0
     2 2DC1 00				.BYTE 0
     2 2DC2 00				.BYTE 0
     2 2DC3 00				.BYTE 0
     2 2DC4 00				.BYTE 0
     2 2DC5 00				.BYTE 0
     2 2DC6 00				.BYTE 0
     2 2DC7 00				.BYTE 0
     2 2DC8 00				.BYTE 0
     2 2DC9 00				.BYTE 0
     2 2DCA 00				.BYTE 0
     2 2DCB 00				.BYTE 0
     2 2DCC 00				.BYTE 0
     2 2DCD 00				.BYTE 0
     2 2DCE 00				.BYTE 0
     2 2DCF 00				.BYTE 0
     2 2DD0 00				.BYTE 0
     2 2DD1 00				.BYTE 0
     2 2DD2 00				.BYTE 0
     2 2DD3 00				.BYTE 0
     2 2DD4 00				.BYTE 0
     2 2DD5 00				.BYTE 0
     2 2DD6 00				.BYTE 0
     2 2DD7 00				.BYTE 0
     2 2DD8 00				.BYTE 0
     2 2DD9 00				.BYTE 0
     2 2DDA 00				.BYTE 0
     2 2DDB 00				.BYTE 0
     2 2DDC 00				.BYTE 0
     2 2DDD 00				.BYTE 0
     2 2DDE 00				.BYTE 0
     2 2DDF 00				.BYTE 0
     2 2DE0 00				.BYTE 0
     2 2DE1 00				.BYTE 0
     2 2DE2 00				.BYTE 0
     2 2DE3 00				.BYTE 0
     2 2DE4 00				.BYTE 0
     2 2DE5 00				.BYTE 0
     2 2DE6 00				.BYTE 0
     2 2DE7 00				.BYTE 0
     2 2DE8 00				.BYTE 0
     2 2DE9 00				.BYTE 0
     2 2DEA 00				.BYTE 0
     2 2DEB 00				.BYTE 0
     2 2DEC 00				.BYTE 0
     2 2DED 00				.BYTE 0
     2 2DEE 00				.BYTE 0
     2 2DEF 00				.BYTE 0
     2 2DF0 00				.BYTE 0
     2 2DF1 00				.BYTE 0
     2 2DF2 00				.BYTE 0
     2 2DF3 00				.BYTE 0
     2 2DF4 00				.BYTE 0
     2 2DF5 00				.BYTE 0
     2 2DF6 00				.BYTE 0
     2 2DF7 00				.BYTE 0
     2 2DF8 00				.BYTE 0
     2 2DF9 00				.BYTE 0
     2 2DFA 00				.BYTE 0
     2 2DFB 00				.BYTE 0
     2 2DFC 00				.BYTE 0
     2 2DFD 00				.BYTE 0
     2 2DFE 00				.BYTE 0
     2 2DFF 00				.BYTE 0
     4 2E00				org SINTAB1
Source: D:\!Delphi\mads\examples\demoscene\Visdom-II\Visdom-II\Visdom-II.asm
   283 2E00 1F 20 21 22 23 23 + 	ins "Visdom-II-VisdomSplitLogo.sin"	; $2e00
   284
   285 3000				org sintab2
   286 3000 24 25 25 26 27 27 + 	ins "Visdom-II-GtiaSplit.sin"		; $3000
   287
   288 3200				org sintab4
   289 3200 01 02 03 04 05 07 + 	ins "Visdom-II-InfoTextBounce.sin"	; $3200
   290
   291 3300				org sintab5
   292 3300 7F 83 86 89 8C 8F + 	ins "Visdom-II-Sinus256.sin"		; $3300
   293
   294 3400				org txtchr
   295 3400 00 00 00 00 00 00 + 	ins "Visdom-II-HalleChar.pur"		; $3400	;"Visdom-II-HalleChar.cod"_for_testing.
   296
   297 3800				org imppic
   298 3800 01 23 45 67 77 65 + 	ins "Visdom-II-ImpRes9x64.pic"		; $3800-$3a3f
   299
   300 3A40 00 22 15 74 6C 00 + hidtxt	ins "Visdom-II-HalleHidden.txt"
   301
   302 				;================================================================
   303 3B40				org $3f79
   304
   305 3F79				.proc main
   306 3F79-A1E7> 20 BA 3F		jsr copy_segments
   307 3F7C 20 4B 45			jsr init
   308
   309 3F7F 20 AC 47			jsr intro
   310 3F82 20 7D 57			jsr wiggle.effect
   311 3F85 A9 20 85 B4 A9 56 + loop	mwa #scroll.credtxt p1	;Text_start.
   312 3F8D A9 29 85 B6 A9 59 + 	mwa #credits.attributes.part1 p2
   313 3F95 20 D7 59			jsr credits.effect
   314 3F98 20 7D 57			jsr wiggle.effect
   315 3F9B 20 FF 7D			jsr impress.effect
   316 3F9E A9 C9 85 B4 A9 56 + 	mwa #scroll.moretxt p1	;Text_start.
   317 3FA6 A9 7D 85 B6 A9 59 + 	mwa #credits.attributes.part2 p2
   318 3FAE 20 D7 59			jsr credits.effect
   319 3FB1 20 7D 57			jsr wiggle.effect
   320 3FB4 20 FF 7D			jsr impress.effect
   321 3FB7 4C 85 3F			jmp loop
   322 					.endp
   323
   324 				;===============================================================
   325 3FBA				.proc copy_segments
   326 3FBA 78				sei
   327 3FBB AC 0B D4			ldy $d40b		;Disable_all.
   328 3FBE D0 FB			bne *-3
   329 3FC0 8C 0E D4			sty $d40e
   330 3FC3 8C 0E D2			sty $d20e
   331 3FC6 8C 00 D4			sty $d400
   332 3FC9 A9 FE			lda #$fe
   333 3FCB 8D 01 D3			sta $d301
   334 3FCE A2 14			ldx #$14		;Copy_Sound_module.
   335 3FD0 B9 D0 8E		copy1	lda sound_data,y		;From_Link_loaction.
   336 3FD3 99 00 EC		copy2	sta $ec00,y		;UP_To_Dest_location.
   337 3FD6 C8				iny
   338 3FD7 D0 F7			bne copy1
   339 3FD9 EE D2 3F			inc copy1+2
   340 3FDC EE D5 3F			inc copy2+2
   341 3FDF CA				dex
   342 3FE0 D0 EE			bne copy1
   343
   344 3FE2 A2 10			ldx #$10		;Copy_Lowmem_data.
   345 3FE4 B9 30 7F		copy3	lda visdom_data,y	;From_Link_loaction.
   346 3FE7 99 00 10		copy4	sta splipic,y		;DOWN_To_Dest_location.
   347 3FEA C8				iny
   348 3FEB D0 F7			bne copy3
   349 3FED EE E6 3F			inc copy3+2
   350 3FF0 EE E9 3F			inc copy4+2
   351 3FF3 CA				dex
   352 3FF4 D0 EE			bne copy3
   353 3FF6 60				rts
   354 					.endp
   355
   356 				;===============================================================
   357 3FF7				.proc poke		;Does_not_change_<A>_or_<C>.
   358 3FF7 91 B4			sta (p1),y		;Store_LmsRout_byte.
   359 3FF9 E6 B4			inc p1
   360 3FFB D0 02			sne
   361 3FFD E6 B5			inc p1+1
   362 3FFF 60				rts
   363 					.endp
   364
   365 				;================================================================
   366 4000				org $4000
   367
   368 4000				.local visdl		;Put_here_to_ensure_no_1k_boundary_is_crossed
   369 4000 4D 00 24			.byte $4d,a(vispic)	;2_blank_lines
   370 4003 4E				.byte $4e
   371 4004 00 24		lms	.word vispic
   372 4006 00 80 00 00 00 00 + 	.byte $00,$80,$00,$00,$00,$00,$00,$00,$00,$00,$00
   373 4011 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
   374 4021 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
   375 4031 00 00 00 00 00 00 + 	.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
   376 4041 20				.byte $20
   377 4042 01				.byte $01
   378 4043 58 40		jump	.word splidl1 
   379
   380 4045				.local scrdl
   381 4045 20				.byte $20
   382 4046 54 00 8C D4 80 8C		.byte $54,0,>scrsm,$d4,128,>scrsm
   383 404C 54 00 8D 54 80 8D		.byte $54,0,>scrsm+1,$54,128,>scrsm+1
   384 4052 54 00 8E			.byte $54,0,>scrsm+2
   385 					.endl
   386 					.print "scrdl: ",scrdl," - ",scrdl+.len scrdl-1, " (", .len scrdl,")"
   386 				scrdl: $4045 - $4054 ($0010)
   387
   388 4055 41				.byte $41
   389 4056 00 40			.word visdl
   390
   391 4058				.local splidl1
   392 4058 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   393 4070 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   394 4088 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   395 40A0 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   396 40B8 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   397 40D0 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   398 40E8 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   399 4100 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   400 4118 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   401 4130 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   402 4148 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   403 4160 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   404 4178 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   405 4190 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   406 41A8 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   407 41C0 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   408 41D8 01				.byte $01
   409 41D9 45 40			.word scrdl
   410 					.endl
   411 					.print "splidl1: ",splidl1," - ",splidl1+.len splidl1-1, " (", .len splidl1,")"
   411 				splidl1: $4058 - $41DA ($0183)
   412
   413 41DB				.local splidl2
   414 41DB 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   415 41F3 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   416 420B 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   417 4223 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   418 423B 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   419 4253 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   420 426B 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   421 4283 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   422 429B 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   423 42B3 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   424 42CB 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   425 42E3 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   426 42FB 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   427 4313 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   428 432B 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   429 4343 4F 00 00 4F 00 00 + 	.byte $4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0,$4f,0,0
   430 435B 01				.byte $01
   431 435C 45 40			.word scrdl
   432 					.endl
   433 					.print "splidl2: ",splidl2," - ",splidl2+.len splidl2-1, " (", .len splidl2,")"
   433 				splidl2: $41DB - $435D ($0183)
   434
   435 					.endl
   436
   437 					.print "visdl: ",visdl," - ",visdl+.len visdl-1, " (", .len visdl,")"
   437 				visdl: $4000 - $435D ($035E)
   438
   439 435E				.local noline
   440 435E 00 00 00 00 00 00 + 	.word 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
   441 					.endl
   442
   443 				;================================================================
   444 4386				.proc kernel
   445 4386 A5 FA			lda wcol1
   446 4388 05 F6			ora whell
   447 438A 8D A2 43			sta kernel2+1
   448 438D A5 FB			lda wcol2
   449 438F 05 F6			ora whell
   450 4391 A8				tay
   451 4392 8D 19 D0			sta $d019
   452 4395 18				clc
   453 4396 A2 00			ldx #0
   454 4398 8D 0A D4		loop	sta $d40a
   455 439B			kernel_mtab
   456 439B BD 00 82			lda mtab,x
   457 439E 8D 04 D0			sta $d004
   458 43A1 A9 00		kernel2	lda #$00
   459 43A3 8D 1A D0			sta $d01a
   460 43A6			kernel_btab
   461 43A6 BD 00 81			lda btab,x
   462 43A9 8D AD 43			sta kernel3+1
   463 43AC D0 FE		kernel3	bne *+0
   464 43AE EA			kernel4	nop
   465 43AF EA				nop
   466 43B0 EA				nop
   467 43B1 EA				nop
   468 43B2 EA				nop
   469 43B3 EA				nop
   470 43B4 EA				nop
   471 43B5 EA				nop
   472 43B6 EA				nop
   473 43B7 EA				nop
   474 43B8 EA				nop
   475 43B9 EA				nop
   476 43BA 8C 1A D0			sty $d01a
   477 43BD E8				inx
   478 43BE 10 D8			bpl loop
   479 43C0 60				rts
   480
   481 43C1 EA			kernel5	nop
   482 43C2 EA				nop
   483 43C3 EA				nop
   484 43C4 EA				nop
   485 43C5 EA				nop
   486 43C6 EA				nop
   487 43C7 EA				nop
   488 43C8 EA				nop
   489 43C9 EA				nop
   490 43CA EA				nop
   491 43CB EA				nop
   492 43CC 24 00			bit $00
   493 43CE 8C 1A D0			sty $d01a
   494 43D1 E8				inx
   495 43D2 10 C4			bpl loop
   496 43D4 60				rts
   497 43D5			loop_end
   498 					.if >loop <> >loop_end
   499 					.error "kernel.loop crosses page boundary between ",loop," and ",loop_end
   500 					.endif
   501
   502 = 0013			k	= kernel5-kernel4
   503 					.endp
   504
   505 				;================================================================
   506 43D5 2C 0F D4		nmi	bit $d40f		;NMI_handling.
   507 43D8 10 03			bpl vbi
   508 43DA 6C E1 00			jmp (dliv)
   509
   510 				;================================================================
   511 43DD 8D 0F D4		vbi	sta $d40f		;Reset NMIST
   512 43E0 48				pha
   513 43E1 8A				txa
   514 43E2 48				pha
   515 43E3 98				tya
   516 43E4 48				pha
   517
   518 43E5 D8				cld
   519 43E6 A9 22			lda #$22		;Visdom_Colors.
   520 43E8 8D 00 D4			sta $d400
   521 43EB A9 14			lda #$14
   522 43ED 8D 1B D0			sta $d01b
   523 43F0 A9 0A			lda #10
   524 43F2 8D 16 D0			sta $d016
   525 43F5 A9 0E			lda #14
   526 43F7 8D 17 D0			sta $d017
   527 43FA A9 00			lda #0
   528 43FC 8D 18 D0			sta $d018
   529
   530 43FF A9 20			lda #32			;Missle_Border.
   531 4401 8D 04 D0			sta $d004
   532 4404 A9 28			lda #40
   533 4406 8D 05 D0			sta $d005
   534 4409 A9 D0			lda #208
   535 440B 8D 06 D0			sta $d006
   536 440E A9 D8			lda #216
   537 4410 8D 07 D0			sta $d007
   538 4413 A9 FF			lda #$ff
   539 4415 8D 0C D0			sta $d00c
   540 4418 8D 11 D0			sta $d011
   541 441B A9 00			lda #0
   542 441D 8D 19 D0			sta $d019
   543
   544 4420 A9 54			lda #84			;Underlay_PM.
   545 4422 8D 00 D0			sta $d000
   546 4425 A9 5D			lda #93
   547 4427 8D 01 D0			sta $d001
   548 442A A9 96			lda #150
   549 442C 8D 02 D0			sta $d002
   550 442F A9 B3			lda #179
   551 4431 8D 03 D0			sta $d003
   552 4434 A9 FF			lda #$ff
   553 4436 8D 09 D0			sta $d009
   554 4439 8D 0A D0			sta $d00a
   555 443C 8D 0B D0			sta $d00b
   556 443F A9 5B 85 E1 A9 44 + 	mwa #dli.dli1 dliv
   557
   558 					
   559 4447 20 A6 48			jsr scroll		;Do_Scroller.
   560 444A 20 54 57			jsr visdom_logo.effect	;Sine_VISDOM_colors.
   561 444D 20 A9 58			jsr getkey		;Keyboard_routine.
   562
   563 4450 A9 C0			lda #$c0
   564 4452 8D 0E D4			sta $d40e
   565
   566 4455 68				pla
   567 4456 A8				tay
   568 4457 68				pla
   569 4458 AA				tax
   570 4459 68				pla
   571 445A 40				rti
   572
   573 				;================================================================
   574 445B				.proc dli
   575
   576 445B				.proc dli1
   577 445B 48				pha
   578 445C 8A				txa
   579 445D 48				pha
   580 445E 98				tya
   581 445F 48				pha
   582 4460 A9 FE			lda #$fe
   583 4462 8D 0A D4			sta $d40a
   584 4465 8D 0D D0			sta $d00d
   585 4468 8D 0E D0			sta $d00e
   586 446B 8D 0F D0			sta $d00f
   587 446E 8D 10 D0			sta $d010
   588
   589 4471 A2 37			ldx #55
   590 4473 BD 00 86		loop	lda vftab1,x		;Visdom_Kernel.
   591 4476 BC 00 87			ldy vftab2,x
   592 4479 8D 0A D4			sta $d40a
   593 447C 8D 1A D0			sta $d01a
   594 447F 8C 12 D0			sty $d012
   595 4482 BD 00 88			lda vftab3,x
   596 4485 BC 00 8A			ldy vftab5,x
   597 4488 8D 13 D0			sta $d013
   598 448B 8C 14 D0			sty $d014
   599 448E BD 00 89			lda vftab4,x
   600 4491 BC 00 8B			ldy vftab6,x
   601 4494 8D 1A D0			sta $d01a
   602 4497 8C 15 D0			sty $d015
   603 449A CA				dex
   604 449B 10 D6			bpl loop
   605 449D			loop_end
   606
   607 					.if >loop <> >loop_end	;Not critical
   608 				;	.error "dli1.loop crosses page boundary between ",loop," and ",loop_end
   609 					.endif
   610
   611 449D A9 00			lda #0
   612 449F 8D 0A D4			sta $d40a
   613 44A2 8D 1A D0			sta $d01a
   614 44A5 8D 00 D0			sta $d000
   615 44A8 8D 01 D0			sta $d001
   616 44AB 8D 02 D0			sta $d002
   617 44AE 8D 03 D0			sta $d003
   618 44B1 8D 0A D4			sta $d40a
   619 44B4 8D 04 D0			sta $d004
   620 44B7 8D 05 D0			sta $d005
   621 44BA 8D 06 D0			sta $d006
   622 44BD 8D 07 D0			sta $d007
   623 44C0 6C 04 00			jmp (dlip)
   624 					.endp
   625
   626 44C3 8D 0A D4		dli3	sta $d40a
   627 44C6 A9 70			lda #$70
   628 44C8 8D 1B D0			sta $d01b
   629 44CB A9 00		border1	lda #0			;Upper_Borderline.
   630 44CD 8D 1A D0			sta $d01a
   631 44D0 8D 0A D4			sta $d40a
   632 44D3 A5 F6			lda whell
   633 44D5 8D 1A D0			sta $d01a
   634 44D8 20 86 43			jsr kernel
   635 44DB EA				nop
   636 44DC EA				nop
   637 44DD EA				nop
   638 44DE EA				nop
   639 44DF EA				nop
   640 44E0 24 00			bit $00
   641
   642 44E2 A5 F6		dli4	lda whell		;Scroll DL
   643 44E4 A2 00		border2	ldx #0
   644 44E6 8D 1A D0			sta $d01a
   645 44E9 8E 04 D0			stx $d004
   646 44EC 8D 0A D4			sta $d40a
   647 44EF A9 00			lda #0
   648 44F1 8D 1B D0			sta $d01b
   649 44F4 8E 1A D0			stx $d01a
   650 44F7 A2 23			ldx #$23
   651 44F9 A4 EA			ldy scrsof
   652 44FB 8D 0A D4			sta $d40a
   653 44FE 8D 1A D0			sta $d01a
   654 4501 8E 00 D4			stx $d400
   655 4504 8C 04 D4			sty $d404
   656 4507 A9 20			lda #>scrchr		;Scroller_Screen.
   657 4509 8D 09 D4			sta $d409
   658 450C A9 0C			lda #12
   659 450E 8D 16 D0			sta $d016
   660 4511 A5 ED			lda scrcol1
   661 4513 8D 17 D0			sta $d017
   662 4516 49 0C			eor #12
   663 4518 8D 18 D0			sta $d018
   664 451B A9 2B 85 E1 A9 45 + 	mwa #dli5 dliv
   665 4523 E6 BF			inc cnt			;Sync_Counter.
   666 4525 68				pla
   667 4526 A8				tay
   668 4527 68				pla
   669 4528 AA				tax
   670 4529 68				pla
   671 452A 40				rti
   672
   673 452B 48			dli5	pha			;Second_Scroller_colorset.
   674 452C 8A				txa
   675 452D 48				pha
   676 452E 98				tya
   677 452F 48				pha
   678
   679 4530 A5 EE			lda scrcol2
   680 4532 8D 17 D0			sta $d017
   681 4535 49 0C			eor #12
   682 4537 8D 18 D0			sta $d018
   683 453A 20 F3 FA			jsr sndplay		;Replay_Tune.
   684
   685 453D 68				pla
   686 453E A8				tay
   687 453F 68				pla
   688 4540 AA				tax
   689 4541 68				pla
   690 4542 40				rti
   691
   692 					.endp
   693
   694 				;================================================================
   695 4543				.proc wait
   696 4543 18				clc
   697 4544 65 BF			adc cnt			;Wait_Acc_VBlanks.
   698 4546 C5 BF		loop	cmp cnt
   699 4548 D0 FC			bne loop
   700 454A 60				rts
   701 					.endp
   702
   703 				;=============================================================
   704 454B				.proc init
   705 454B 78				sei
   706 454C D8				cld
   707 454D A9 00			lda #0			;Disable_all_irqs.
   708 454F 8D 0E D4			sta $d40e
   709 4552 8D 0E D2			sta $d20e
   710 4555 AA				tax
   711 4556			init_chips
   712 4556 9D 00 D0			sta $d000,x		;Reset_customs.
   713 4559 9D 00 D2			sta $d200,x
   714 455C 9D 00 D4			sta $d400,x
   715 455F E8				inx
   716 4560 D0 F4			bne init_chips
   717 4562 A9 03			lda #3
   718 4564 8D 0F D2			sta $d20f
   719
   720 4567 A2 06			ldx #.len visdom_logo.viscols
   721 4569			init_viscols
   722 4569 BD 29 57			lda visdom_logo.viscols-1,x
   723 456C 20 90 47			jsr map_palette
   724 456F 9D 29 57			sta visdom_logo.viscols-1,x
   725 4572 CA				dex
   726 4573 D0 F4			bne init_viscols
   727
   728 4575 A2 84			ldx #.len credits.attributes
   729 4577			init_attributes
   730 4577 BD 28 59			lda credits.attributes-1,x
   731 457A 20 90 47			jsr map_palette
   732 457D 9D 28 59			sta credits.attributes-1,x
   733 4580 CA				dex
   734 4581 D0 F4			bne init_attributes
   735
   736 4583 A9 00			lda #0
   737 4585			init_workspace
   738 4585 9D 00 86			sta vftab1,x		;Reset_workspace.
   739 4588 9D 00 87			sta vftab2,x
   740 458B 9D 00 88			sta vftab3,x
   741 458E 9D 00 89			sta vftab4,x
   742 4591 9D 00 8A			sta vftab5,x
   743 4594 9D 00 8B			sta vftab6,x
   744 4597 9D 00 81			sta btab,x
   745 459A 9D 00 82			sta mtab,x
   746 459D 9D 00 83			sta htab,x
   747 45A0 E8				inx
   748 45A1 D0 E2			bne init_workspace
   749
   750 45A3 A2 00			ldx #0
   751 45A5 95 00		init_zp	sta $00,x		;Clear_zeropage_and_xtab.
   752 45A7 E8				inx
   753 45A8 D0 FB			bne init_zp
   754
   755 45AA			init_dotabs_zp			;Copy_ZP_routine
   756 45AA BD 81 58			lda wiggle.effect.dotabs,x
   757 45AD 95 08			sta wiggle.effect.dotabs_zp,x
   758 45AF E8				inx
   759 45B0 E0 28			cpx #.len wiggle.effect.dotabs_zp
   760 45B2 D0 F6			bne init_dotabs_zp
   761
   762 45B4 A9 FE			lda #$fe		;Init_RAM_and_NMI_handler.
   763 45B6 8D 01 D3			sta $d301
   764 45B9 A9 D5 8D FA FF A9 + 	mwa #nmi $fffa
   765
   766 45C3 A9 00 85 B4 A9 10 + 	mwa #splipic p1
   767 45CB A2 00			ldx #0
   768 45CD			init_wiggle
   769 45CD A5 B4			lda p1
   770 45CF 9D 00 84			sta wigllo,x
   771 45D2 9D 01 84			sta wigllo+1,x
   772 45D5 18				clc
   773 45D6 69 28			adc #40
   774 45D8 85 B4			sta p1
   775 45DA A5 B5			lda p1+1
   776 45DC 9D 00 85			sta wiglhi,x
   777 45DF 9D 01 85			sta wiglhi+1,x
   778 45E2 69 00			adc #0
   779 45E4 85 B5			sta p1+1
   780 45E6 E8				inx
   781 45E7 E8				inx
   782 45E8 D0 E3			bne init_wiggle
   783 45EA A9 5E			lda #<noline		;Empty_bitmap_(40_bytes).
   784 45EC A2 43			ldx #>noline
   785 45EE 8D 00 84			sta wigllo
   786 45F1 8E 00 85			stx wiglhi
   787
   788 45F4 A9 00 85 B4 A9 B0 + 	mwa #lmsrout1 p1	;Generate_setlms_routine.
   789 45FC A9 59 85 B6 A9 40 + 	mwa #visdl.splidl1+1 p2
   790 4604 20 26 47			jsr init_visdl_lms
   791 4607 20 00 B0			jsr lmsrout1		;Init_splidl1.
   792 460A A9 00 85 B4 A9 B8 + 	mwa #lmsrout2 p1
   793 4612 A9 DC 85 B6 A9 41 + 	mwa #visdl.splidl2+1 p2
   794 461A 20 26 47			jsr init_visdl_lms
   795 461D 20 00 B8			jsr lmsrout2		;Init_splidl1.
   796
   797 4620 A9 20			lda #32
   798 4622 A2 00			ldx #0
   799 4624			init_scroller
   800 4624 9D 00 8C			sta scrsm,x		;Clear_Scroller.
   801 4627 9D 00 8D			sta scrsm+$100,x
   802 462A 9D 80 8D			sta scrsm+$180,x
   803 462D E8				inx
   804 462E D0 F4			bne init_scroller
   805
   806 4630 A9 7B 85 B0 A9 49 + 	mwa #scroll.scrtxt tp	;Set_text_begin.
   807 4638 A9 70 85 B2 A9 5D + 	mwa #info.inftxt ip
   808 4640 A9 00			lda #0
   809 4642 85 E8			sta scrpos		;Init_scroll_values.
   810 4644 85 E9			sta scrcnt
   811 4646 85 EA			sta scrsof
   812 4648 85 EF			sta scrhold
   813 464A 85 ED			sta scrcol1
   814 464C 85 EE			sta scrcol2
   815 464E A9 9B			lda #space
   816 4650 85 EB			sta scrcod
   817 4652 A9 03			lda #3
   818 4654 85 EC			sta scrspd
   819
   820 4656 A2 00			ldx #0
   821 4658			init_starfield
   822 4658 AD 0A D2			lda $d20a		;Init_Starfield.
   823 465B 9D 00 90			sta stab,x
   824 465E AD 0A D2			lda $d20a
   825 4661 29 03			and #3
   826 4663 18				clc
   827 4664 69 01			adc #1
   828 4666 9D 00 91			sta gtab,x
   829 4669 8A				txa
   830 466A 29 3F			and #63
   831 466C C9 20			cmp #32
   832 466E 90 02			bcc *+4
   833 4670 49 3F			eor #63
   834 4672 A8				tay
   835 4673 B9 34 57			lda visdom_logo.vislums+4,y
   836 4676 9D 00 92			sta ktab,x
   837 4679 E8				inx
   838 467A D0 DC			bne init_starfield
   839
   840 467C A9 00 85 B4 A9 C8 + 	mwa #tsm p1
   841 4684 A2 00			ldx #0
   842 4686			init_textlms
   843 4686 A5 B4			lda p1			;LMS_adrs_for_Text_bounce.
   844 4688 9D 00 8F			sta textllo,x
   845 468B 18				clc
   846 468C 69 28			adc #40
   847 468E 85 B4			sta p1
   848 4690 A5 B5			lda p1+1
   849 4692 9D 80 8F			sta textlhi,x
   850 4695 69 00			adc #0
   851 4697 85 B5			sta p1+1
   852 4699 E8				inx
   853 469A 10 EA			bpl init_textlms
   854
   855 469C AD 14 D0			lda $d014
   856 469F 29 02			and #2
   857 46A1 F0 03			beq init_pal
   858 46A3 EE 88 F4			inc $f488		;Slow down on NTSC from 5/50 to 6/60.
   859 46A6			init_pal
   860 46A6 20 07 EC			jsr sndinit		;Init_module.
   861
   862 46A9 20 D2 46			jsr bragen		;Init_HTAB.
   863 46AC 20 8B 7C			jsr impress.impinit	;Init_ImpRes_(SM,DL_&_llo/hi).
   864
   865 46AF A9 00			lda #0
   866 46B1 85 E4			sta keyold		;Init_GETKEY.
   867 46B3 85 E5			sta keyind
   868 46B5 85 E6			sta keybrk
   869 46B7 85 E7			sta termin		;Init_Termination_Flag.
   870 46B9 8D CC 44			sta dli.border1+1	;Init_Screen.
   871 46BC 8D E5 44			sta dli.border2+1
   872 46BF A9 C3 85 04 A9 44 + 	mwa #dli.dli3 dlip
   873 46C7 A9 00 8D 02 D4 A9 + 	mwa #visdl $d402
   874 46D1 60				rts
   875
   876 				;================================================================
   877 46D2				.proc bragen
   878 46D2 A2 00			ldx #0			;Generate branch offset tab
   879 46D4 A0 00			ldy #0
   880 46D6 BD F3 46		bragen1	lda braxtab,x
   881 46D9 C5 BC			cmp x1
   882 46DB F0 11			beq bragen3
   883 46DD 85 BC			sta x1
   884 46DF C9 FF			cmp #$ff
   885 46E1 F0 0F			beq bragend
   886 46E3 BD 0C 47			lda branch,x
   887 46E6 99 00 83		bragen2	sta htab,y
   888 46E9 C8				iny
   889 46EA C4 BC			cpy x1
   890 46EC D0 F8			bne bragen2
   891 46EE E8			bragen3	inx
   892 46EF 4C D6 46			jmp bragen1
   893 46F2 60			bragend	rts
   894
   895 46F3 08 0F 18 20 28 30 + braxtab	.byte 8,15,24,32,40,48,56,64,72,76,80,84,88,92,96
   896 				;	.byte 100,104,108,112,112,114,116,120,127,$ff
   897 4702 64 68 6B 6C 70 72 + 	.byte 100,104,107,108,112,114,116,120,127,$ff
   898
   899 470C 0C 20 0B 1E 0A 1D + branch	.byte 12,kernel.k+13,11,kernel.k+11,10,kernel.k+10,9,kernel.k+9,8,kernel.k+8,7,kernel.k+7
   900 4718 06 19 05 18 04 17 + 	.byte 6,kernel.k+6,5,kernel.k+5,4,kernel.k+4,3,kernel.k+3,2,kernel.k+2,1,kernel.k+1,0,kernel.k
   901 					.endp
   902
   903 				;===============================================================
   904
   905 4726				.proc init_visdl_lms
   906 4726 A0 00			ldy #0
   907 4728 A2 00			ldx #0
   908 472A A9 A4		loop	lda #$a4		;LDY_offset_(xtab)
   909 472C 20 F7 3F			jsr poke
   910 472F 8A				txa
   911 4730 18				clc
   912 4731 69 30			adc #<xtab
   913 4733 20 F7 3F			jsr poke
   914 				;	lda #>xtab		;Is on zero page now
   915 				;	jsr poke
   916 4736 A9 B9			lda #$b9		;LDA_wigllo,y.
   917 4738 20 F7 3F			jsr poke
   918 473B A9 00			lda #<wigllo
   919 473D 20 F7 3F			jsr poke
   920 4740 A9 84			lda #>wigllo
   921 4742 20 F7 3F			jsr poke
   922 4745 A9 8D			lda #$8d		;STA_splidl1+1.
   923 4747 20 F7 3F			jsr poke
   924 474A A5 B6			lda p2
   925 474C 20 F7 3F			jsr poke
   926 474F A5 B7			lda p2+1
   927 4751 20 F7 3F			jsr poke
   928 4754 18 A5 B6 69 01 85 + 	adw p2 #1
   929 475F A9 B9			lda #$b9		;LDA_wiglhi,y.
   930 4761 20 F7 3F			jsr poke
   931 4764 A9 00			lda #<wiglhi
   932 4766 20 F7 3F			jsr poke
   933 4769 A9 85			lda #>wiglhi
   934 476B 20 F7 3F			jsr poke
   935 476E A9 8D			lda #$8d		;STA_splidl1+2.
   936 4770 20 F7 3F			jsr poke
   937 4773 A5 B6			lda p2
   938 4775 20 F7 3F			jsr poke
   939 4778 A5 B7			lda p2+1
   940 477A 20 F7 3F			jsr poke
   941 477D 18 A5 B6 69 02 85 + 	adw p2 #2
   942 4788 E8				inx
   943 4789 10 9F			bpl loop
   944 478B A9 60			lda #$60		;RTS.
   945 478D 4C F7 3F			jmp poke
   946 					.endp
   947 					
   948 					.endp
   949
   950 				;===============================================================
   951
   952 4790				.proc map_palette
   953 4790 48				pha
   954 4791 AD 14 D0			lda $d014
   955 4794 29 02			and #2
   956 4796 F0 12			beq pal			;It is already PAL.
   957 4798 68				pla
   958 4799 C9 10			cmp #$10
   959 479B 90 0E			bcc return
   960 479D C9 E0			cmp #$e0;		$0/E/F=>0/E/F,
   961 479F B0 0A			bcs return
   962 47A1 69 10			adc #$10 		;$1..D => 2..D/1
   963 47A3 C9 E0			cmp #$e0
   964 47A5 90 04			bcc return
   965 47A7 69 2F			adc #$30-1
   966 47A9 60				rts
   967 47AA 68			pal	pla
   968 47AB 60			return	rts
   969 					.endp
   970
   971 				;===============================================================
   972 					
   973 47AC				.proc intro
   974 47AC A9 82			lda #$82		;NTSC=$82;PAL=$9b
   975 47AE CD 0B D4			cmp $d40b
   976 47B1 D0 FB			bne *-3
   977 47B3 A9 40			lda #$40		;VBI/DLI_on.
   978 47B5 8D 0E D4			sta $d40e
   979 47B8 20 97 48			jsr introa		;Wait_for_Scroll.
   980 47BB A9 32			lda #50
   981 47BD 20 43 45			jsr wait
   982
   983 47C0 A9 60 8D 04 40 A9 + 	mwa #vispic+2400 visdl.lms
   984 47CA A2 00			ldx #0
   985 47CC A9 01		intro1	lda #1
   986 47CE 20 43 45			jsr wait
   987 47D1 38 AD 04 40 E9 28 + 	sbw visdl.lms #40	;Scroll_VisPic_lms.
   988 47DF A9 0E			lda #$0e
   989 47E1 1D 06 40			ora visdl.lms+2,x	;Enlarge_DL.
   990 47E4 9D 06 40			sta visdl.lms+2,x
   991 47E7 E8				inx
   992 47E8 E0 3B			cpx #59
   993 47EA D0 E0			bne intro1
   994
   995 47EC 20 97 48			jsr introa		;Wait_for_Scroll.
   996 47EF A9 64			lda #100
   997 47F1 20 43 45			jsr wait
   998
   999 47F4 A9 00			lda #0			;Fade_VisTabs.
  1000 47F6 85 BC			sta x1
  1001 47F8 A9 00 85 B4 A9 86 + 	mwa #vftab1 p1
  1002 4800 A6 BC		intro2	ldx x1			;Which_Tab.
  1003 4802 BD 2A 57			lda visdom_logo.viscols,x;Char_Color.
  1004 4805 85 BD			sta x2
  1005 4807 A2 00			ldx #0
  1006 4809 A9 02		intro3	lda #2			;Fade_up.
  1007 480B 20 43 45			jsr wait
  1008 480E 8A				txa
  1009 480F A0 7F			ldy #127
  1010 4811 91 B4		intro4	sta (p1),y		;Whole_tab.
  1011 4813 88				dey
  1012 4814 10 FB			bpl intro4
  1013 4816 E8				inx
  1014 4817 E0 10			cpx #16
  1015 4819 D0 EE			bne intro3
  1016
  1017 481B A9 0F			lda #15
  1018 481D 85 BE			sta x3
  1019 481F A9 02		intro5	lda #2			;Fade_Down.
  1020 4821 20 43 45			jsr wait
  1021 4824 A0 00			ldy #0
  1022 4826 98			intro6	tya
  1023 4827 29 3F			and #63
  1024 4829 C9 20			cmp #32
  1025 482B 90 02			bcc *+4
  1026 482D 49 3F			eor #63
  1027 482F AA				tax
  1028 4830 BD 30 57			lda visdom_logo.vislums,x;With_Bars_and_..
  1029 4833 18				clc
  1030 4834 65 BE			adc x3
  1031 4836 C9 10			cmp #16
  1032 4838 90 02			bcc *+4
  1033 483A A9 0F			lda #15
  1034 483C 05 BD			ora x2			;Colors.
  1035 483E 91 B4			sta (p1),y
  1036 4840 C8				iny
  1037 4841 10 E3			bpl intro6
  1038 4843 C6 BE			dec x3
  1039 4845 10 D8			bpl intro5
  1040 4847 A9 32			lda #50			;Short_delay.
  1041 4849 20 43 45			jsr wait
  1042
  1043 484C E6 B5			inc p1+1		;Next_Tab.
  1044 484E E6 BC			inc x1
  1045 4850 A5 BC			lda x1			;6th_Tab_?
  1046 4852 C9 06			cmp #6
  1047 4854 D0 AA			bne intro2
  1048
  1049 4856 20 97 48			jsr introa
  1050 4859 A9 64			lda #100
  1051 485B 20 43 45			jsr wait
  1052
  1053 485E A2 0F			ldx #15
  1054 4860 EE CC 44		intro7	inc dli.border1+1	;Upper_borderline.
  1055 4863 A9 02			lda #2
  1056 4865 20 43 45			jsr wait
  1057 4868 CA				dex
  1058 4869 D0 F5			bne intro7
  1059
  1060 486B A9 19			lda #25			;Wait_a_little.
  1061 486D 20 43 45			jsr wait
  1062 4870 A2 0F			ldx #15
  1063 4872 EE E5 44		intro8	inc dli.border2+1	;Lower_borderline.
  1064 4875 A9 02			lda #2
  1065 4877 20 43 45			jsr wait
  1066 487A CA				dex
  1067 487B D0 F5			bne intro8
  1068
  1069 487D A9 19			lda #25			;Wait_a_little.
  1070 487F 20 43 45			jsr wait
  1071 4882 A2 0F			ldx #15
  1072 4884 E6 F6		intro9	inc whell		;Background.
  1073 4886 A9 02			lda #2
  1074 4888 20 43 45			jsr wait
  1075 488B CA				dex
  1076 488C D0 F6			bne intro9
  1077
  1078 488E A9 02			lda #2			;hold_"WIGGLE".
  1079 4890 85 EC			sta scrspd
  1080 4892 A9 FA			lda #250
  1081 4894 85 EF			sta scrhold
  1082 4896 60				rts
  1083
  1084 4897 A9 02		introa	lda #2			;Set_Speed.
  1085 4899 85 EC			sta scrspd
  1086 489B A9 46			lda #70
  1087 489D C5 EF		introb	cmp scrhold		;Wait_for_ScrollHold.
  1088 489F D0 FC			bne introb
  1089 48A1 A9 00			lda #0			;Hold_Scroll.
  1090 48A3 85 EC			sta scrspd
  1091 48A5 60				rts
  1092 					.endp
  1093
  1094 				;===============================================================
  1095 48A6				.proc scroll
  1096 48A6 A5 EF			lda scrhold		;Hold_scroller_?
  1097 48A8 F0 03			beq scroll0
  1098 48AA C6 EF			dec scrhold
  1099 48AC 60				rts
  1100
  1101 48AD A5 EA		scroll0	lda scrsof		;Do_soft-scroll.
  1102 48AF 38				sec
  1103 48B0 E5 EC			sbc scrspd
  1104 48B2 30 03			bmi scroll1
  1105 48B4 85 EA			sta scrsof
  1106 48B6 60				rts
  1107
  1108 48B7 18			scroll1	clc			;Do_hard-scroll.
  1109 48B8 69 04			adc #4
  1110 48BA 85 EA			sta scrsof
  1111 48BC A4 EB			ldy scrcod		;Chardat_offset.
  1112 48BE E6 EB			inc scrcod
  1113 48C0 E6 E8			inc scrpos		;Scrsm_offset.
  1114 48C2 A5 E8			lda scrpos
  1115 48C4 29 3F			and #$3f
  1116 48C6 85 E8			sta scrpos
  1117 48C8 AA				tax
  1118 48C9 8D 47 40			sta visdl.scrdl+2	;LMS_scroll.
  1119 48CC 8D 4D 40			sta visdl.scrdl+8
  1120 48CF 8D 53 40			sta visdl.scrdl+14
  1121 48D2 09 80			ora #$80
  1122 48D4 8D 4A 40			sta visdl.scrdl+5
  1123 48D7 8D 50 40			sta visdl.scrdl+11
  1124 48DA B9 80 1C			lda scrdat+$000,y	;Copy_scrdat.
  1125 48DD 9D 00 8C			sta scrsm+$000,x
  1126 48E0 9D 40 8C			sta scrsm+$040,x
  1127 48E3 B9 20 1D			lda scrdat+$0a0,y
  1128 48E6 9D 80 8C			sta scrsm+$080,x
  1129 48E9 9D C0 8C			sta scrsm+$0c0,x
  1130 48EC B9 C0 1D			lda scrdat+$140,y
  1131 48EF 9D 00 8D			sta scrsm+$100,x
  1132 48F2 9D 40 8D			sta scrsm+$140,x
  1133 48F5 B9 60 1E			lda scrdat+$1e0,y
  1134 48F8 9D 80 8D			sta scrsm+$180,x
  1135 48FB 9D C0 8D			sta scrsm+$1c0,x
  1136 48FE B9 00 1F			lda scrdat+$280,y
  1137 4901 9D 00 8E			sta scrsm+$200,x
  1138 4904 9D 40 8E			sta scrsm+$240,x
  1139 4907 C6 E9			dec scrcnt		;Dec_charsize.
  1140 4909 30 01			bmi scroll2
  1141 490B 60				rts
  1142
  1143 490C A0 00		scroll2	ldy #0
  1144 490E B1 B0			lda (tp),y
  1145 4910 D0 08			bne scroll4		;Last_?
  1146 4912 85 EC			sta scrspd
  1147 4914 A9 C8			lda #200
  1148 4916 85 E7			sta termin
  1149 4918 A9 9B			lda #space
  1150
  1151 491A C9 E0		scroll4	cmp #$e0		;Special_?
  1152 491C B0 0D			bcs scroll5
  1153 491E 85 EB			sta scrcod		;New_code.
  1154 4920 A9 04			lda #4			;New_char.
  1155 4922 85 E9			sta scrcnt
  1156 4924 E6 B0 D0 02 E6 B1		inw tp			;Next_char.
  1157 492A 60				rts
  1158
  1159 492B C9 F0		scroll5	cmp #$f0
  1160 492D B0 28			bcs scroll7
  1161 492F 29 07			and #7
  1162 4931 F0 11			beq scroll6
  1163 4933 85 EC			sta scrspd
  1164 4935 A9 9B			lda #space
  1165 4937 85 EB			sta scrcod
  1166 4939 A9 00			lda #0
  1167 493B 85 E9			sta scrcnt
  1168 493D E6 B0 D0 02 E6 B1		inw tp
  1169 4943 60				rts
  1170
  1171 4944 A9 50		scroll6	lda #80
  1172 4946 85 EF			sta scrhold
  1173 4948 A9 9B			lda #space
  1174 494A 85 EB			sta scrcod
  1175 494C A9 00			lda #0
  1176 494E 85 E9			sta scrcnt
  1177 4950 E6 B0 D0 02 E6 B1		inw tp
  1178 4956 60				rts
  1179
  1180 4957 C8			scroll7	iny
  1181 4958 B1 B0			lda (tp),y
  1182 495A 20 90 47			jsr map_palette
  1183 495D 85 ED			sta scrcol1
  1184 495F C8				iny
  1185 4960 B1 B0			lda (tp),y
  1186 4962 20 90 47			jsr map_palette
  1187 4965 85 EE			sta scrcol2
  1188 4967 A9 00			lda #0
  1189 4969 85 E9			sta scrcnt
  1190 496B A9 9B			lda #space
  1191 496D 85 EB			sta scrcod
  1192 496F 18 A5 B0 69 03 85 + 	adw tp #3
  1193 497A 60				rts
  1194
  1195 497B E2 F0 38 78 9B 9B + scrtxt	ins "Visdom-II-HalleScroll.txt"	;$5200
  1196 = 5620			credtxt	= scrtxt+$ca5			;$5ea5
  1197 = 56C9			moretxt	= scrtxt+$d4e			;$5f4e
  1198
  1199 					.endp
  1200
  1201 				;================================================================
  1202
  1203 572A				.proc visdom_logo
  1204
  1205
  1206 572A				.local viscols
  1207 572A 30 20 E0 B0 70 40		.byte $30,$20,$e0,$b0,$70,$40
  1208 					.endl
  1209
  1210 5730				.local vislums
  1211 5730 00 00 02 00 02 02 + 	.byte 0,0,2,0,2,2,4,2,4,4,6,4,6,6,8,6,8,8,10,8,10
  1212 5745 0A 0C 0A 0C 0C 0E + 	.byte 10,12,10,12,12,14,12,14,14,14,14,14,14,14,14
  1213 					.endl
  1214 					
  1215 5754				.proc effect
  1216 5754 A5 BF			lda cnt				;Do_Colorbars_Sine.
  1217 5756 0A				asl
  1218 5757 AA				tax
  1219 5758 BD 00 2E			lda sintab1,x
  1220 575B 8D 92 44			sta dli.dli1.loop+31		;"M"
  1221 575E BD 18 2E			lda sintab1+[sinus_offset*1],x
  1222 5761 8D 86 44			sta dli.dli1.loop+19		;"O"
  1223 5764 BD 30 2E			lda sintab1+[sinus_offset*2],x
  1224 5767 8D 8F 44			sta dli.dli1.loop+28		;"D"
  1225 576A BD 48 2E			lda sintab1+[sinus_offset*3],x
  1226 576D 8D 83 44			sta dli.dli1.loop+16		;"S"
  1227 5770 BD 54 2E			lda sintab1+[sinus_offset*3]+[sinus_offset/2],x
  1228 5773 8D 77 44			sta dli.dli1.loop+4		;"I"
  1229 5776 BD 6C 2E			lda sintab1+[sinus_offset*4]+[sinus_offset/2],x
  1230 5779 8D 74 44			sta dli.dli1.loop+1		;"V"
  1231 577C 60				rts
  1232 					.endp
  1233 					.endp
  1234
  1235 				;================================================================
  1236 577D				.proc wiggle
  1237 					
  1238 577D				.proc effect
  1239 577D A9 0F			lda #15			;Fade_down.
  1240 577F 85 F6			sta whell
  1241 5781 A9 FF			lda #$ff
  1242 5783 85 F7			sta whadd
  1243 5785 20 73 58			jsr set_whold
  1244 5788 A9 05			lda #wnumb
  1245 578A 85 F5			sta wnumber		;Do_it_(N)_times.
  1246 578C A9 01			lda #1
  1247 578E 20 43 45			jsr wait
  1248 5791 A9 C3 85 04 A9 44 + 	mwa #dli.dli3 dlip
  1249 5799 A9 58 8D 43 40 A9 + 	mwa #visdl.splidl1 visdl.jump;Reset_vectors.
  1250
  1251 57A3			move_loop
  1252 57A3			invalid_color1
  1253 57A3 AD 0A D2			lda $d20a		;New_wiggle.
  1254 57A6 29 F0			and #$f0
  1255 57A8 C9 F0			cmp #$f0		;Would_result_in_both_sides_being_$f0
  1256 57AA F0 F7			beq invalid_color1
  1257 57AC 85 FA			sta wcol1		;Color_for_$d01a
  1258 57AE			invalid_color2
  1259 57AE AD 0A D2			lda $d20a
  1260 57B1 29 F0			and #$f0
  1261 57B3 05 FA			ora wcol1		;Since_$D019_will_be_or-ed_with_$d01a,_wcol2_must_have_at_least_the_same_bits_set_as_wcol1
  1262 57B5 C5 FA			cmp wcol1
  1263 57B7 F0 F5			beq invalid_color2	;But_must_not_be_equal
  1264 57B9 85 FB			sta wcol2
  1265 57BB AD 0A D2			lda $d20a
  1266 57BE 29 03			and #3
  1267 57C0 85 FC			sta wadd1
  1268 57C2 AD 0A D2			lda $d20a
  1269 57C5 29 03			and #3
  1270 57C7 85 FD			sta wadd2
  1271 57C9 AD 0A D2			lda $d20a
  1272 57CC 29 07			and #7
  1273 57CE 85 FE			sta wstep1
  1274 57D0 AD 0A D2			lda $d20a
  1275 57D3 29 03			and #3
  1276 57D5 85 FF			sta wstep2
  1277 57D7 E6 FC			inc wadd1
  1278 57D9 E6 FD			inc wadd2
  1279 57DB E6 FE			inc wstep1
  1280 57DD E6 FF			inc wstep2
  1281
  1282 57DF			inner_loop
  1283
  1284 57DF A5 F8			lda wcnt1		;Calc_Wiggle.
  1285 57E1 85 0A			sta dotabs_zp.sintab2_adr+1
  1286 57E3 18				clc
  1287 57E4 65 FC			adc wadd1
  1288 57E6 85 F8			sta wcnt1
  1289 57E8 A5 FE			lda wstep1
  1290 57EA 85 22			sta dotabs_zp.sintab2_add+1
  1291
  1292 57EC A5 F9			lda wcnt2
  1293 57EE 85 0D			sta dotabs_zp.sintab3_adr+1
  1294 57F0 18				clc
  1295 57F1 65 FD			adc wadd2
  1296 57F3 85 F9			sta wcnt2
  1297 57F5 A5 FF			lda wstep2
  1298 57F7 85 29			sta dotabs_zp.sintab3_add+1
  1299
  1300 57F9 A2 00			ldx #0
  1301 57FB 20 08 00			jsr dotabs_zp		;New_Xtab.
  1302
  1303 57FE A5 16			lda dotabs_zp.mtab_adr+1;SetLms_instructions.
  1304 5800 D0 06			bne do_lms2
  1305 5802 20 00 B0			jsr lmsrout1
  1306 5805 4C 0B 58			jmp do_lmsx
  1307 5808 20 00 B8		do_lms2	jsr lmsrout2
  1308 580B			do_lmsx
  1309
  1310 580B A9 01			lda #1
  1311 580D 20 43 45			jsr wait
  1312
  1313 5810 A5 16			lda dotabs_zp.mtab_adr+1;Flip mtab
  1314 5812 8D 9C 43			sta kernel.kernel_mtab+1
  1315 5815 8D A7 43			sta kernel.kernel_btab+1;Flip btab
  1316 5818 49 80			eor #$80
  1317 581A 85 16			sta dotabs_zp.mtab_adr+1
  1318 581C 85 1C			sta dotabs_zp.btab_adr+1
  1319 581E F0 0D			beq do_dl2		;Flip DL
  1320 5820 A9 58 8D 43 40 A9 + 	mwa #visdl.splidl1 visdl.jump
  1321 582A 4C 37 58			jmp do_dlx
  1322 582D A9 DB 8D 43 40 A9 + do_dl2	mwa #visdl.splidl2 visdl.jump
  1323 5837			do_dlx
  1324
  1325 5837 18				clc
  1326 5838 A5 F6			lda whell		;GTIA_fading.
  1327 583A 65 F7			adc whadd
  1328 583C 85 F6			sta whell
  1329 583E C9 FF			cmp #$ff
  1330 5840 D0 06			bne not_ff
  1331 5842 A9 00			lda #0
  1332 5844 85 F7			sta whadd
  1333 5846 85 F6			sta whell
  1334 5848 C9 0F		not_ff	cmp #15
  1335 584A F0 19			beq return
  1336
  1337 584C A5 E6			lda keybrk		;User_break.
  1338 584E D0 0E			bne user_break
  1339
  1340 5850 C6 F4			dec wtime		;Dec_showingtime.
  1341 5852 D0 8B			bne inner_loop
  1342 5854 20 73 58			jsr set_whold
  1343
  1344 5857 C6 F5			dec wnumber		;Dec_number_of_wiggles.
  1345 5859 F0 03 4C A3 57		jne move_loop
  1346
  1347 585E			user_break
  1348 585E A9 01			lda #1			;Start_blend_up.
  1349 5860 85 F7			sta whadd
  1350 5862 4C DF 57			jmp inner_loop
  1351
  1352 5865 A9 00		return	lda #0			;Pure_White.
  1353 5867 85 FA			sta wcol1
  1354 5869 85 FB			sta wcol2
  1355 586B A5 E6			lda keybrk
  1356 586D F0 03			seq
  1357 586F 20 29 5C			jsr info.effect
  1358 5872 60				rts
  1359
  1360 5873				.proc set_whold
  1361 5873 A9 C8			lda #whold
  1362 5875 85 F4			sta wtime		;Keep_it_up_(N)_Doubleframes.
  1363 5877 AD 14 D0			lda $d014
  1364 587A 29 02			and #2
  1365 587C F0 02			beq pal
  1366 587E 46 F4			lsr wtime		;Only_half_the_number_of_frames_on_slow_NTSC
  1367 5880 60			pal	rts
  1368 					.endp
  1369 				;===============================================================
  1370 5881			dotabs
  1371
  1372 5881				.proc dotabs_zp,$08	;$00/$01_are_used_by_the_sound_player,$04/05_is_dlip
  1373 0008 18			loop	clc
  1374 0009			sintab2_adr
  1375 0009 AD 00 30			lda sintab2		;Calc_Xtab.
  1376 000C			sintab3_adr
  1377 000C 6D 00 31			adc sintab3
  1378 000F 95 30			sta xtab,x
  1379 0011 A8				tay
  1380 0012 18				clc			;Convert_xpos_table_to_..
  1381 0013 69 30			adc #48
  1382 0015			mtab_adr
  1383 0015 9D 00 82			sta mtab,x		;Missile_HPOS.
  1384 0018 B9 00 83			lda htab,y
  1385 001B			btab_adr
  1386 001B 9D 00 81			sta btab,x
  1387
  1388 001E 18				clc			;C=0
  1389 001F A5 0A			lda sintab2_adr+1
  1390 0021			sintab2_add
  1391 0021 69 00			adc #0			;Steps.
  1392 0023 85 0A			sta sintab2_adr+1
  1393 0025 18				clc
  1394 0026 A5 0D			lda sintab3_adr+1
  1395 0028			sintab3_add
  1396 0028 69 00			adc #0			;Steps.
  1397 002A 85 0D			sta sintab3_adr+1
  1398 002C E8				inx
  1399 002D 10 D9			bpl loop
  1400 002F 60				rts
  1401
  1402 					.endp			;End of do_tabs
  1403
  1404 58A9				org dotabs+.len dotabs_zp
  1405 					.endp			;End of effect
  1406
  1407 					.endp			;End of wiggle
  1408
  1409 				;================================================================
  1410 58A9				.proc getkey
  1411 58A9 A5 E7			lda termin		;Scroller_termination_?
  1412 58AB F0 04			beq getkey0
  1413 58AD C6 E7			dec termin
  1414 58AF F0 0C			beq getkey1
  1415
  1416 58B1 AD 0F D2		getkey0	lda $d20f		;Shift_pressed_?
  1417 58B4 29 08			and #8
  1418 58B6 F0 05			beq getkey1
  1419
  1420 58B8 AD 10 D0			lda $d010		;Trigger_pressed_?
  1421 58BB D0 17			bne getkey2
  1422 58BD 78			getkey1	sei
  1423 58BE A9 00			lda #0
  1424 58C0 8D 0E D4			sta $d40e
  1425 58C3 8D 0E D2			sta $d20e
  1426 58C6 8D 00 D4			sta $d400
  1427 58C9 8D 1A D0			sta $d01a
  1428 58CC A9 FF			lda #$ff
  1429 58CE 8D 01 D3			sta $d301
  1430 58D1 6C FC FF			jmp ($fffc)		;Goto_system_reset.
  1431
  1432 58D4 AD 0F D2		getkey2	lda $d20f		;Any_key_pressed_?
  1433 58D7 29 04			and #4
  1434 58D9 D0 26			bne getkey5
  1435 58DB AD 09 D2			lda $d209		;which_one_?
  1436 58DE C9 11			cmp #17
  1437 58E0 D0 02			bne getkey3
  1438 58E2 85 E6			sta keybrk		;"HELP".
  1439 58E4 C5 E4		getkey3	cmp keyold
  1440 58E6 F0 19			beq getkey5
  1441 58E8 85 E4			sta keyold
  1442 58EA A6 E5			ldx keyind
  1443 58EC DD 02 59			cmp keytab,x
  1444 58EF D0 0C			bne getkey4
  1445 58F1 E8				inx
  1446 58F2 86 E5			stx keyind
  1447 58F4 E0 0B			cpx #11
  1448 58F6 D0 09			bne getkey5
  1449 58F8 A0 0B			ldy #index
  1450 58FA 4C C8 7E			jmp hidden
  1451
  1452 58FD A9 00		getkey4	lda #0
  1453 58FF 85 E5			sta keyind
  1454 5901 60			getkey5	rts
  1455
  1456 5902 2E 0B 3A 3E 23 21 + keytab	.byte 46,11,58,62,35,33,11,40,62,42,0
  1457 					; "W  U  D  S  N     U  R  S  E  L"
  1458 					.endp
  1459 				;================================================================
  1460
  1461 590D				.proc credits
  1462
  1463 590D 00 80 54		credl	.byte $00,$80,$54
  1464 5910 00 C8			.word tsm
  1465 5912 94 14 14 14 80 00		.byte $94,$14,$14,$14,$80,$00
  1466 5918 14 94 14 14 14 80 + 	.byte $14,$94,$14,$14,$14,$80,$00
  1467 591F 14 94 14 14 14 80 + 	.byte $14,$94,$14,$14,$14,$80,$00
  1468 5926 01				.byte $01
  1469 5927 45 40			.word visdl.scrdl
  1470
  1471 5929				.local attributes
  1472 5929				.local part1
  1473 5929 00 00 00 00 00 00 + 	.byte 00,00,00,00,00,00,$00,$00,$30,$70,$00,$00	;"Welcome"
  1474 5935 00 00 00 00 0A 0A + 	.byte 00,00,00,00,10,10,$80,$b0,$80,$b0,$90,$b0	;"Visdom"
  1475 5941 00 00 0A 0A 00 00 + 	.byte 00,00,10,10,00,00,$10,$20,$00,$d0,$00,$d0	;"Peter"
  1476 594D 00 00 0A 0A 0A 0A + 	.byte 00,00,10,10,10,10,$10,$20,$00,$d0,$00,$d0	;"Karsten"
  1477 5959 00 00 00 00 00 00 + 	.byte 00,00,00,00,00,00,$00,$00,$30,$70,$00,$00	;"done"
  1478 5965 0A 0A 0A 0A 0A 0A + 	.byte 10,10,10,10,10,10,$30,$00,$30,$00,$30,$00	;"halle"
  1479 5971 0A 0A 00 00 00 00 + 	.byte 10,10,00,00,00,00,$c0,$c0,$30,$30,$c0,$c0	;"space"
  1480 					.endl
  1481
  1482 597D				.local part2
  1483 597D 00 00 0A 0A 00 00 + 	.byte 00,00,10,10,00,00,$80,$b0,$20,$00,$20,$00	;"Rules"
  1484 5989 00 00 00 00 0A 0A + 	.byte 00,00,00,00,10,10,$30,$70,$30,$70,$30,$70	;"Coming"
  1485 5995 00 00 0A 0A 0A 0A + 	.byte 00,00,10,10,10,10,$80,$b0,$80,$b0,$20,$00	;"Filled"
  1486 59A1 00 00 0A 0A 0A 0A + 	.byte 00,00,10,10,10,10,$40,$40,$20,$00,$20,$00	;"Soon"
  1487 					.endl
  1488 					.endl
  1489
  1490 59AD 00 00 00 00 00 00	tscrx	.byte 0,0,0,0,0,0
  1491 59B3 00 00 00 00 00 00	tcols	.byte 0,0,0,0,0,0
  1492 59B9 00 00 00 00 00 00	thell	.byte 0,0,0,0,0,0
  1493
  1494 59BF 00 02 04 06 08 0A + tfade1	.byte 0,2,4,6,8,10,12,14
  1495 59C7 00 02 04 06 08 0A + tfade2	.byte 0,2,4,6,8,10,10,10
  1496 59CF 00 02 04 06 06 06 + tfade3	.byte 0,2,4,6,6,6,6,6
  1497
  1498 				;================================================================
  1499 59D7				.proc effect
  1500 59D7 20 04 5B			jsr clrtsm		;Print_Credits.
  1501 59DA 20 4D 5A			jsr credini
  1502
  1503 59DD 20 04 5B		loop	jsr clrtsm
  1504 59E0 20 24 5B			jsr prttsm
  1505 59E3 20 FE 59			jsr credup
  1506 59E6 A5 E6			lda keybrk		;User_break_?
  1507 59E8 D0 06			bne user_break
  1508 59EA A0 00			ldy #0			;Text_end_flag_?
  1509 59EC B1 B4			lda (p1),y
  1510 59EE D0 ED			bne loop
  1511
  1512 59F0			user_break
  1513 59F0 20 04 5B			jsr clrtsm		;Clear_Screen.
  1514 59F3 20 8B 5A			jsr credex		;Fadeup.
  1515 59F6 A5 E6			lda keybrk
  1516 59F8 F0 03			seq			;Do_info_?
  1517 59FA 20 29 5C			jsr info.effect
  1518 59FD 60				rts
  1519
  1520 				;================================================================
  1521 59FE				.proc credup
  1522 59FE A2 00			ldx #0
  1523 5A00 BD B3 59		credup1	lda tcols,x
  1524 5A03 1D B4 59			ora tcols+1,x
  1525 5A06 F0 18			beq credup3
  1526 5A08 A0 00			ldy #0
  1527 5A0A 98			credup2	tya
  1528 5A0B 9D B9 59			sta thell,x
  1529 5A0E 9D BA 59			sta thell+1,x
  1530 5A11 A9 03			lda #3
  1531 5A13 20 43 45			jsr wait
  1532 5A16 C8				iny
  1533 5A17 C0 08			cpy #8
  1534 5A19 D0 EF			bne credup2
  1535 5A1B A9 23			lda #35
  1536 5A1D 20 43 45			jsr wait
  1537 5A20 E8			credup3	inx
  1538 5A21 E8				inx
  1539 5A22 E0 06			cpx #6
  1540 5A24 D0 DA			bne credup1
  1541
  1542 5A26 A2 7D			ldx #125
  1543 5A28 A5 E6		credup4	lda keybrk		;Delay_if_no_User_break.
  1544 5A2A D0 08			bne credup5
  1545 5A2C A9 01			lda #1
  1546 5A2E 20 43 45			jsr wait
  1547 5A31 CA				dex
  1548 5A32 D0 F4			bne credup4
  1549
  1550 5A34 A0 07		credup5	ldy #7
  1551 5A36 98			credup6	tya
  1552 5A37 A2 05			ldx #5
  1553 5A39 9D B9 59		credup7	sta thell,x
  1554 5A3C CA				dex
  1555 5A3D 10 FA			bpl credup7
  1556 5A3F A9 03			lda #3
  1557 5A41 20 43 45			jsr wait
  1558 5A44 88				dey
  1559 5A45 10 EF			bpl credup6
  1560 5A47 A9 1E			lda #30
  1561 5A49 20 43 45			jsr wait
  1562 5A4C 60				rts
  1563 					.endp
  1564
  1565 				;================================================================
  1566 5A4D				.proc credini
  1567 5A4D A2 05			ldx #5
  1568 5A4F A9 00			lda #0
  1569 5A51 9D B3 59		credin1	sta tcols,x		;Reset_all.
  1570 5A54 9D AD 59			sta tscrx,x
  1571 5A57 9D B9 59			sta thell,x
  1572 5A5A CA				dex
  1573 5A5B 10 F4			bpl credin1
  1574
  1575 5A5D A9 01			lda #1			;Fade_down_Screen.
  1576 5A5F 20 43 45			jsr wait
  1577 5A62 A9 00 85 F6			mva #0 whell		;Black inner border
  1578 5A66 A9 9B 85 04 A9 5A + 	mwa #credli dlip
  1579 5A6E A9 0D 8D 43 40 A9 + 	mwa #credl visdl.jump
  1580 5A78 A2 0F			ldx #15
  1581 5A7A 8E A7 5A		credin2	stx credli.credli1+1
  1582 5A7D A9 02			lda #2
  1583 5A7F 20 43 45			jsr wait
  1584 5A82 CA				dex
  1585 5A83 D0 F5			bne credin2
  1586 5A85 A9 19			lda #25
  1587 5A87 20 43 45			jsr wait
  1588 5A8A 60				rts
  1589 					.endp
  1590
  1591 				;================================================================
  1592 5A8B				.proc credex
  1593 5A8B A2 00			ldx #0
  1594 5A8D 8E A7 5A		credex1	stx credli.credli1+1		;Exit_Credits.
  1595 5A90 A9 02			lda #2
  1596 5A92 20 43 45			jsr wait
  1597 5A95 E8				inx
  1598 5A96 E0 10			cpx #16
  1599 5A98 D0 F3			bne credex1
  1600 5A9A 60				rts
  1601 					.endp
  1602
  1603 				;================================================================
  1604 5A9B				.proc credli
  1605 5A9B 8D 0A D4			sta $d40a		;Upper_Borderline.
  1606 5A9E A9 0E			lda #14
  1607 5AA0 8D 1A D0			sta $d01a
  1608 5AA3 8D 0A D4			sta $d40a
  1609 5AA6 A9 00		credli1	lda #0			;Fade_Background.
  1610 5AA8 8D 1A D0			sta $d01a
  1611 5AAB A9 00			lda #0			;First_DLI.
  1612 5AAD 85 E0			sta dliup
  1613 5AAF A9 BD 85 E1 A9 5A + 	mwa #credli2 dliv	;New_DLI.
  1614 5AB7 68				pla
  1615 5AB8 A8				tay
  1616 5AB9 68				pla
  1617 5ABA AA				tax
  1618 5ABB 68				pla
  1619 5ABC 40				rti
  1620
  1621 5ABD 48			credli2	pha
  1622 5ABE 8A				txa
  1623 5ABF 48				pha
  1624 5AC0 98				tya
  1625 5AC1 48				pha
  1626 5AC2 A6 E0			ldx dliup		;Last_DLI.
  1627 5AC4 E0 06			cpx #6
  1628 5AC6 F0 32			beq credli6
  1629 5AC8 BD AD 59			lda tscrx,x
  1630 5ACB 8D 04 D4			sta $d404
  1631 5ACE BC B9 59			ldy thell,x		;Fade_index.
  1632 5AD1 B9 BF 59			lda tfade1,y		;Brightness.
  1633 5AD4 F0 03			beq credli3		;Black_?
  1634 5AD6 1D B3 59			ora tcols,x		;Set_Textcolor_1.
  1635 5AD9 8D 16 D0		credli3	sta $d016
  1636 5ADC B9 C7 59			lda tfade2,y
  1637 5ADF F0 03			beq credli4
  1638 5AE1 1D B3 59			ora tcols,x		;Set_Textcolor_2.
  1639 5AE4 8D 17 D0		credli4	sta $d017
  1640 5AE7 B9 CF 59			lda tfade3,y
  1641 5AEA F0 03			beq credli5
  1642 5AEC 1D B3 59			ora tcols,x		;Set_Textcolor_3.
  1643 5AEF 8D 18 D0		credli5	sta $d018
  1644 5AF2 E6 E0			inc dliup
  1645 5AF4 68				pla
  1646 5AF5 A8				tay
  1647 5AF6 68				pla
  1648 5AF7 AA				tax
  1649 5AF8 68				pla
  1650 5AF9 40				rti
  1651
  1652 5AFA A9 65		credli6	lda #dli4_y
  1653 5AFC CD 0B D4			cmp $d40b
  1654 5AFF D0 FB			bne *-3
  1655 5B01 4C E2 44			jmp dli.dli4
  1656 					.endp
  1657 					.endp
  1658
  1659 				;================================================================
  1660
  1661 5B04				.proc clrtsm
  1662 5B04 A2 00			ldx #0
  1663 5B06 A9 20			lda #32			;Clear_Text_screen.
  1664 5B08 9D 00 C8		loop	sta tsm,x
  1665 5B0B 9D 00 C9			sta tsm+$100,x
  1666 5B0E 9D 00 CA			sta tsm+$200,x
  1667 5B11 9D 00 CB			sta tsm+$300,x
  1668 5B14 9D 00 CC			sta tsm+$400,x
  1669 5B17 9D 00 CD			sta tsm+$500,x
  1670 5B1A 9D 00 CE			sta tsm+$600,x
  1671 5B1D 9D 00 CF			sta tsm+$700,x
  1672 5B20 E8				inx
  1673 5B21 D0 E5			bne loop
  1674 5B23 60				rts
  1675 					.endp
  1676 				;================================================================
  1677 5B24				.proc prttsm
  1678 5B24 A9 03			lda #3			;Line_counter.
  1679 5B26 85 BC			sta x1
  1680 5B28 A9 04 85 BA A9 C8 + 	mwa #tsm+4 p4		;Text_Destination.
  1681 5B30 A9 08		prttsm1	lda #8			;Print_8_chars.
  1682 5B32 85 BD			sta x2
  1683 5B34 A0 00		prttsm2	ldy #0
  1684 5B36 B1 B4			lda (p1),y		;Get_char.
  1685 5B38 18				clc			;Calc_DatAdr.
  1686 5B39 69 80			adc #<scrdat
  1687 5B3B 85 B8			sta p3
  1688 5B3D A9 00			lda #0
  1689 5B3F 69 1C			adc #>scrdat
  1690 5B41 85 B9			sta p3+1
  1691 5B43 A2 05			ldx #5			;Lines.
  1692 5B45 A0 04		prttsm3	ldy #4			;Rows.
  1693 5B47 B1 B8		prttsm4	lda (p3),y
  1694 5B49 EA				nop
  1695 5B4A EA				nop
  1696 5B4B 91 BA			sta (p4),y		;Copy_ScrDat.
  1697 5B4D 88				dey
  1698 5B4E 10 F7			bpl prttsm4
  1699 5B50 18 A5 B8 69 A0 85 + 	adw p3 #160
  1700 5B5B 18 A5 BA 69 30 85 + 	adw p4 #48
  1701 5B66 CA				dex
  1702 5B67 D0 DC			bne prttsm3
  1703 5B69 38 A5 BA E9 EB 85 + 	sbw p4 #235
  1704 5B74 E6 B4 D0 02 E6 B5		inw p1
  1705 5B7A C6 BD			dec x2
  1706 5B7C D0 B6			bne prttsm2
  1707 5B7E 18 A5 BA 69 C8 85 + 	adw p4 #200
  1708 5B89 C6 BC			dec x1
  1709 5B8B D0 A3			bne prttsm1
  1710
  1711 5B8D A0 0B			ldy #11
  1712 5B8F B1 B6		prttsm5	lda (p2),y		;Get_attributes.
  1713 5B91 99 AD 59			sta tscrx,y
  1714 5B94 88				dey
  1715 5B95 10 F8			bpl prttsm5
  1716 5B97 18 A5 B6 69 0C 85 + 	adw p2 #12
  1717 5BA2 60				rts
  1718 					.endp
  1719
  1720 					.endp
  1721 				;================================================================
  1722
  1723 5BA3				.proc info
  1724
  1725 5BA3				.local infdl
  1726 5BA3 00 00 00 00 62		.byte $00,$00,$00,$00,$62
  1727 5BA8 00 C8		lms	.word tsm
  1728 5BAA 22 22 22 22 22		.byte $22,$22,$22,$22,$22
  1729 5BAF 22 22 22 22 22		.byte $22,$22,$22,$22,$22
  1730 5BB4 22 22 22 22 02 00 + 	.byte $22,$22,$22,$22,$02,$00,$00,$00
  1731 5BBC 01				.byte $01
  1732 5BBD 45 40			.word visdl.scrdl
  1733 					.endl
  1734
  1735 				;infcols	.byte 10,6,2,0,2,6,10,14
  1736
  1737 5BBF				.proc infdli
  1738 5BBF 8D 0A D4			sta $d40a		;Upper_Borderline.
  1739 5BC2 A9 0E			lda #14
  1740 5BC4 8D 1A D0			sta $d01a
  1741 5BC7 8D 0A D4			sta $d40a
  1742 5BCA A9 00		infdli1	lda #0			;Fade_Background.
  1743 5BCC 8D 1A D0			sta $d01a
  1744 5BCF 8D 18 D0			sta $d018
  1745 5BD2 A9 34			lda #>txtchr		;Text_Screen.
  1746 5BD4 8D 09 D4			sta $d409
  1747 5BD7 A9 0E			lda #14
  1748 5BD9 8D 17 D0			sta $d017
  1749 5BDC A9 80			lda #$80
  1750 5BDE 8D 08 D0			sta $d008
  1751 5BE1 8D 0D D0			sta $d00d
  1752 5BE4 A9 01			lda #1
  1753 5BE6 8D 1B D0			sta $d01b
  1754
  1755 5BE9 A5 BF			lda cnt			;Scroll_Ktab.
  1756 5BEB 18				clc
  1757 5BEC 69 00		infdli3	adc #0			;Add_Bounce_offset.
  1758 5BEE A8				tay
  1759
  1760 5BEF A6 E0			ldx dliup
  1761 5BF1 30 21			bmi infdlix
  1762 5BF3 BD 00 90		infdli4	lda stab,x
  1763 5BF6 8D 0A D4			sta $d40a
  1764 5BF9 8D 00 D0			sta $d000
  1765 5BFC 8E 12 D0			stx $d012
  1766 5BFF B9 00 92			lda ktab,y
  1767 5C02 8D 17 D0			sta $d017
  1768 5C05 C8				iny
  1769 5C06 8D 0A D4			sta $d40a
  1770 5C09 B9 00 92			lda ktab,y
  1771 5C0C 8D 17 D0			sta $d017
  1772 5C0F C8				iny
  1773 5C10 E8				inx
  1774 5C11 E8				inx
  1775 5C12 10 DF			bpl infdli4
  1776
  1777 5C14 A9 00		infdlix	lda #0
  1778 5C16 8D 0A D4			sta $d40a
  1779 5C19 8D 00 D0			sta $d000
  1780 5C1C 8D 01 D0			sta $d001
  1781 5C1F A9 65			lda #dli4_y
  1782 5C21 CD 0B D4			cmp $d40b
  1783 5C24 D0 FB			bne *-3
  1784 5C26 4C E2 44			jmp dli.dli4
  1785 					.endp
  1786
  1787 				;================================================================
  1788 5C29				.proc effect
  1789 5C29 20 04 5B			jsr credits.clrtsm	;Clear_Screen.
  1790 5C2C A2 00			ldx #0
  1791 5C2E 20 26 5D			jsr bounce.bounce3	;Init_Textposition.
  1792 5C31 A9 01			lda #1
  1793 5C33 20 43 45			jsr wait
  1794 5C36 A9 00 85 F6			mva #0 whell		;Black inner border
  1795 5C3A A9 80			lda #$80		;No_Stars_yet.
  1796 5C3C 85 E0			sta dliup
  1797 5C3E A9 BF 85 04 A9 5B + 	mwa #infdli dlip	;New_DLI.
  1798 5C46 A9 A3 8D 43 40 A9 + 	mwa #infdl visdl.jump	;New_DL.
  1799 5C50 A2 0F			ldx #15
  1800 5C52 8E CB 5B		info1	stx infdli.infdli1+1	;Fade_down_Background.
  1801 5C55 A9 02			lda #2
  1802 5C57 20 B7 5C			jsr infwait
  1803 5C5A CA				dex
  1804 5C5B 10 F5			bpl info1
  1805 5C5D A9 1E			lda #30
  1806 5C5F 20 B7 5C			jsr infwait
  1807
  1808 5C62 A9 01		info2	lda #1
  1809 5C64 20 B7 5C			jsr infwait
  1810 5C67 C6 E0			dec dliup
  1811 5C69 C6 E0			dec dliup
  1812 5C6B D0 F5			bne info2
  1813 5C6D A9 4B			lda #75
  1814 5C6F 20 B7 5C			jsr infwait
  1815
  1816 5C72 20 D6 5C		info3	jsr infprt
  1817 5C75 20 0C 5D			jsr bounce
  1818 5C78 A0 00			ldy #0
  1819 5C7A B1 B2			lda (ip),y
  1820 5C7C C9 FF			cmp #$ff
  1821 5C7E D0 08			bne info4
  1822 5C80 A9 70 85 B2 A9 5D + 	mwa #info.inftxt ip
  1823 5C88 A5 E6		info4	lda keybrk		;"HELP"_pressed,_then_..
  1824 5C8A F0 04			beq info5
  1825 5C8C C9 11			cmp #17
  1826 5C8E F0 E2			beq info3
  1827
  1828 5C90 A9 32		info5	lda #50
  1829 5C92 20 B7 5C			jsr infwait
  1830
  1831 5C95 A9 01		info6	lda #1
  1832 5C97 20 B7 5C			jsr infwait
  1833 5C9A E6 E0			inc dliup
  1834 5C9C E6 E0			inc dliup
  1835 5C9E 10 F5			bpl info6
  1836 5CA0 A9 19			lda #25
  1837 5CA2 20 B7 5C			jsr infwait
  1838
  1839 5CA5 A2 0F			ldx #15
  1840 5CA7 EE CB 5B		info7	inc infdli.infdli1+1
  1841 5CAA A9 02			lda #2
  1842 5CAC 20 B7 5C			jsr infwait
  1843 5CAF CA				dex
  1844 5CB0 D0 F5			bne info7
  1845
  1846 5CB2 A9 00			lda #0			;Reset_Keybrk.
  1847 5CB4 85 E6			sta keybrk
  1848 5CB6 60				rts
  1849
  1850 				;================================================================
  1851 5CB7				.proc infwait
  1852 5CB7 85 BC			sta x1			;Wait_and_..
  1853 5CB9 86 BD			stx x2
  1854 5CBB A9 01		infwai1	lda #1
  1855 5CBD 20 43 45			jsr wait
  1856 5CC0 A2 00			ldx #0
  1857 5CC2 BD 00 90		infwai2	lda stab,x		;Move_Stars-
  1858 5CC5 18				clc
  1859 5CC6 7D 00 91			adc gtab,x
  1860 5CC9 9D 00 90			sta stab,x
  1861 5CCC E8				inx
  1862 5CCD 10 F3			bpl infwai2
  1863 5CCF C6 BC			dec x1
  1864 5CD1 D0 E8			bne infwai1
  1865 5CD3 A6 BD			ldx x2
  1866 5CD5 60				rts
  1867 					.endp
  1868
  1869 				;================================================================
  1870 5CD6				.proc infprt
  1871 5CD6 A0 00			ldy #0
  1872 5CD8 B1 B2		infprt1	lda (ip),y		;Copy_Infotext_to_TSM.
  1873 5CDA 99 00 C8			sta tsm,y
  1874 5CDD C8				iny
  1875 5CDE D0 F8			bne infprt1
  1876 5CE0 E6 B3			inc ip+1		;Next_Page.
  1877 5CE2 A9 01			lda #1
  1878 5CE4 20 B7 5C			jsr infwait		;Do_Starmovement.
  1879 5CE7 B1 B2		infprt2	lda (ip),y
  1880 5CE9 99 00 C9			sta tsm+$100,y
  1881 5CEC C8				iny
  1882 5CED D0 F8			bne infprt2
  1883 5CEF E6 B3			inc ip+1
  1884 5CF1 A9 01			lda #1
  1885 5CF3 20 B7 5C			jsr infwait
  1886 5CF6 A0 57			ldy #[599-512]
  1887 5CF8 B1 B2		infprt3	lda (ip),y
  1888 5CFA 99 00 CA			sta tsm+$200,y
  1889 5CFD 88				dey
  1890 5CFE 10 F8			bpl infprt3
  1891 5D00 18 A5 B2 69 58 85 + 	adw ip #[600-512]
  1892 5D0B 60				rts			;$280_bytes.
  1893 					.endp
  1894
  1895 				;================================================================
  1896 5D0C				.proc bounce
  1897 5D0C A2 00			ldx #0			;Bouncy_bouncy_...
  1898 5D0E 20 26 5D		bounce1	jsr bounce3
  1899 5D11 E8				inx
  1900 5D12 D0 FA			bne bounce1
  1901
  1902 5D14 A9 00			lda #0			;Reset_HELP_flag.
  1903 5D16 85 E6			sta keybrk
  1904 5D18 20 4C 5D			jsr bounce4
  1905
  1906 5D1B A2 FF			ldx #$ff
  1907 5D1D 20 26 5D		bounce2	jsr bounce3
  1908 5D20 CA				dex
  1909 5D21 E0 FF			cpx #$ff
  1910 5D23 D0 F8			bne bounce2
  1911 5D25 60				rts
  1912
  1913 5D26 A9 01		bounce3	lda #1			;Calc_LMS/Softscroll.
  1914 5D28 20 B7 5C			jsr infwait
  1915 5D2B 38				sec
  1916 5D2C A9 80			lda #$80
  1917 5D2E FD 00 32			sbc sintab4,x
  1918 5D31 48				pha
  1919 5D32 4A				lsr
  1920 5D33 4A				lsr
  1921 5D34 4A				lsr
  1922 5D35 A8				tay
  1923 5D36 B9 00 8F			lda textllo,y
  1924 5D39 8D A8 5B			sta infdl.lms
  1925 5D3C B9 80 8F			lda textlhi,y
  1926 5D3F 8D A9 5B			sta infdl.lms+1
  1927 5D42 68				pla
  1928 5D43 8D ED 5B			sta infdli.infdli3+1		;Ktab_offset.
  1929 5D46 29 07			and #7
  1930 5D48 8D 05 D4			sta $d405		;Y_Softscroll.
  1931 5D4B 60				rts
  1932
  1933 5D4C A0 03		bounce4	ldy #3			;Do_Stars_until:
  1934 5D4E A2 00			ldx #0
  1935 5D50 A9 01		bounce5	lda #1
  1936 5D52 20 B7 5C			jsr infwait
  1937 5D55 AD 0F D2			lda $d20f		;Space_or_...
  1938 5D58 29 04			and #4
  1939 5D5A D0 09			bne bounce6
  1940 5D5C AD 09 D2			lda $d209
  1941 5D5F C9 21			cmp #$21
  1942 5D61 D0 02			bne bounce6
  1943 5D63 85 E6			sta keybrk
  1944 5D65 A5 E6		bounce6	lda keybrk		;Help_appears.
  1945 5D67 D0 06			bne bounce7
  1946 5D69 CA				dex			;for_4*256/50_Secs.
  1947 5D6A D0 E4			bne bounce5
  1948 5D6C 88				dey
  1949 5D6D D0 E1			bne bounce5
  1950 5D6F 60			bounce7	rts
  1951 					.endp
  1952 					.endp
  1953
  1954 5D70 00 06 06 06 00 68 + inftxt	ins "Visdom-II-HalleInfo.txt"
  1955
  1956 					.endp
  1957
  1958 				;===============================================================
  1959
  1960
  1961 7BE9				org_fill $7c00
Macro: ORG_FILL [Source: D:\!Delphi\mads\examples\demoscene\Visdom-II\Visdom-II\Visdom-II.asm]
     2 7BE9 00				.BYTE 0
     2 7BEA 00				.BYTE 0
     2 7BEB 00				.BYTE 0
     2 7BEC 00				.BYTE 0
     2 7BED 00				.BYTE 0
     2 7BEE 00				.BYTE 0
     2 7BEF 00				.BYTE 0
     2 7BF0 00				.BYTE 0
     2 7BF1 00				.BYTE 0
     2 7BF2 00				.BYTE 0
     2 7BF3 00				.BYTE 0
     2 7BF4 00				.BYTE 0
     2 7BF5 00				.BYTE 0
     2 7BF6 00				.BYTE 0
     2 7BF7 00				.BYTE 0
     2 7BF8 00				.BYTE 0
     2 7BF9 00				.BYTE 0
     2 7BFA 00				.BYTE 0
     2 7BFB 00				.BYTE 0
     2 7BFC 00				.BYTE 0
     2 7BFD 00				.BYTE 0
     2 7BFE 00				.BYTE 0
     2 7BFF 00				.BYTE 0
     4 7C00				org $7C00
Source: D:\!Delphi\mads\examples\demoscene\Visdom-II\Visdom-II\Visdom-II.asm
  1962
  1963 7C00				.proc impress
  1964
  1965 7C00 00 72 74 76 78 7A + imphtab	.byte $00,$72,$74,$76,$78,$7a,$7c,$7e
  1966 7C08 0E 0E 0E 0E 0E 0E + 	.byte $0e,$0e,$0e,$0e,$0e,$0e,$0e,$0e
  1967
  1968 7C10				.proc impdli
  1969 7C10 8D 0A D4			sta $d40a		;Upper_Borderline.
  1970 7C13 A9 0E			lda #14
  1971 7C15 8D 1A D0			sta $d01a
  1972 7C18 A9 23			lda #$23
  1973 7C1A 8D 00 D4			sta $d400
  1974 7C1D A5 F2			lda impsoft
  1975 7C1F 8D 04 D4			sta $d404
  1976
  1977 7C22 A5 F1			lda impypos
  1978 7C24 4A				lsr
  1979 7C25 A9 40			lda #$40
  1980 7C27 90 02			bcc *+4
  1981 7C29 A9 80			lda #$80
  1982
  1983 7C2B 8D 0A D4			sta $d40a
  1984 7C2E A6 E0			ldx dliup
  1985 7C30 BC 00 7C			ldy imphtab,x
  1986 7C33 8C 12 D0			sty $d012
  1987 7C36 8C 1A D0			sty $d01a
  1988 7C39 8C 85 7C			sty last_line+1
  1989 7C3C BC 01 7C			ldy imphtab+1,x
  1990 7C3F 8C 13 D0			sty $d013
  1991 7C42 BC 02 7C			ldy imphtab+2,x
  1992 7C45 8C 14 D0			sty $d014
  1993 7C48 BC 03 7C			ldy imphtab+3,x
  1994 7C4B 8C 15 D0			sty $d015
  1995 7C4E BC 04 7C			ldy imphtab+4,x
  1996 7C51 8C 16 D0			sty $d016
  1997 7C54 BC 05 7C			ldy imphtab+5,x
  1998 7C57 8C 17 D0			sty $d017
  1999 7C5A BC 06 7C			ldy imphtab+6,x
  2000 7C5D 8C 18 D0			sty $d018
  2001 7C60 BC 07 7C			ldy imphtab+7,x
  2002 7C63 8C 19 D0			sty $d019
  2003
  2004 7C66 A2 00			ldx #0
  2005 7C68			loop
  2006 7C68 8D 0A D4			sta $d40a
  2007 7C6B 49 C0			eor #$c0
  2008 7C6D 8D 1B D0			sta $d01b
  2009 7C70 8D 0A D4			sta $d40a
  2010 7C73 49 C0			eor #$c0
  2011 7C75 8D 1B D0			sta $d01b
  2012 7C78 E8				inx
  2013 7C79 E0 40			cpx #64
  2014 7C7B D0 EB			bne loop
  2015 7C7D			loop_end
  2016 					.if >loop <> >loop_end
  2017 					.error "impdli.loop crosses page boundary between ",loop," and ",loop_end
  2018 					.endif
  2019
  2020 7C7D A9 65			lda #dli4_y
  2021 7C7F CD 0B D4			cmp $d40b
  2022 7C82 D0 FB			bne *-3
  2023 7C84			last_line
  2024 7C84 A9 00			lda #0
  2025 7C86 29 0F			and #15
  2026 7C88 4C E4 44			jmp dli.border2
  2027 					.endp
  2028
  2029 				;===============================================================
  2030 7C8B				.proc impinit
  2031 7C8B A9 40			lda #64			;Init_ImpRes_data.
  2032 7C8D 85 BC			sta x1			;Line_counter.
  2033 7C8F A9 00 85 B4 A9 A0 + 	mwa #impsm p1
  2034 7C97 A9 00 85 B6 A9 38 + 	mwa #imppic p2
  2035 7C9F A9 00		impini1	lda #0
  2036 7CA1 85 BD			sta x2			;Index_1.
  2037 7CA3 A9 3F			lda #63
  2038 7CA5 85 BE			sta x3			;Index_2.
  2039
  2040 7CA7 A4 BD		impini2	ldy x2
  2041 7CA9 B1 B6			lda (p2),y
  2042 7CAB A4 BE			ldy x3
  2043 7CAD 91 B4			sta (p1),y
  2044 7CAF C6 BD			dec x2
  2045 7CB1 10 04			bpl impini3
  2046 7CB3 A9 08			lda #8
  2047 7CB5 85 BD			sta x2
  2048 7CB7 C6 BE		impini3	dec x3
  2049 7CB9 10 EC			bpl impini2
  2050 7CBB 18 A5 B4 69 40 85 + 	adw p1 #64
  2051 7CC6 18 A5 B6 69 09 85 + 	adw p2 #9
  2052 7CD1 C6 BC			dec x1
  2053 7CD3 D0 CA			bne impini1
  2054
  2055 7CD5 A9 00 85 B4 A9 95 + 	mwa #impdl p1
  2056 7CDD 20 FF 7C			jsr init_impdl64
  2057 7CE0 20 FF 7C			jsr init_impdl64
  2058 7CE3 A0 00			ldy #0
  2059 7CE5 A9 01			lda #$01
  2060 7CE7 91 B4			sta (p1),y
  2061 7CE9 C8				iny
  2062 7CEA A9 45			lda #<visdl.scrdl
  2063 7CEC 91 B4			sta (p1),y
  2064 7CEE C8				iny
  2065 7CEF A9 40			lda #>visdl.scrdl
  2066 7CF1 91 B4			sta (p1),y
  2067 7CF3 20 41 7D			jsr init_impdl_lms
  2068
  2069 7CF6 A9 00			lda #0
  2070 7CF8 85 F0			sta impxpos
  2071 7CFA 85 F1			sta impypos
  2072 7CFC 85 F2			sta impsoft
  2073 7CFE 60				rts
  2074
  2075 7CFF				.proc init_impdl64
  2076 7CFF A9 00 85 B6 A9 A0 + 	mwa #impsm p2
  2077 7D07 A2 00			ldx #0
  2078 7D09 A0 00		loop	ldy #0
  2079 7D0B A9 5F			lda #$5f		;LMS.
  2080 7D0D 91 B4			sta (p1),y
  2081 7D0F C8				iny
  2082 7D10 A5 B6			lda p2
  2083 7D12 91 B4			sta (p1),y		;Lo_byte.
  2084 7D14 9D 00 93			sta impllo,x
  2085 7D17 9D 40 93			sta impllo+$40,x	;Gen_tab.
  2086 7D1A C8				iny
  2087 7D1B A5 B7			lda p2+1
  2088 7D1D 91 B4			sta (p1),y		;Hi_byte.
  2089 7D1F 9D 00 94			sta implhi,x
  2090 7D22 9D 40 94			sta implhi+$40,x	;Gen_tab.
  2091 7D25 18 A5 B6 69 40 85 + 	adw p2 #64
  2092 7D30 18 A5 B4 69 03 85 + 	adw p1 #3
  2093 7D3B E8				inx
  2094 7D3C E0 40			cpx #64
  2095 7D3E D0 C9			bne loop
  2096 7D40 60				rts
  2097 					.endp
  2098 					.endp
  2099
  2100 				;===============================================================
  2101
  2102 7D41				.proc init_impdl_lms
  2103 = 0040				lines = 64
  2104 = 00C0				offset = lines*3
  2105
  2106 7D41 A0 00			ldy #0
  2107 7D43 A9 00 85 B4 A9 C0 + 	mwa #lmsrout3 p1
  2108
  2109 7D4B				.proc init_lms_lo
  2110 7D4B A9 01 85 B6 A9 95 + 	mwa #impdl+1 p2
  2111 7D53 A9 B9			lda #$b9		;LDA_impllo+<X>,y
  2112 7D55 20 F7 3F			jsr poke
  2113 7D58 8A				txa
  2114 7D59 18				clc
  2115 7D5A 69 00			adc #<impllo
  2116 7D5C 20 F7 3F			jsr poke
  2117 7D5F A9 93			lda #>impllo
  2118 7D61 20 F7 3F			jsr poke
  2119
  2120 7D64 A9 05			lda #$05		;ORA_x1
  2121 7D66 20 F7 3F			jsr poke
  2122 7D69 A9 BC			lda #<x1
  2123 7D6B 20 F7 3F			jsr poke
  2124
  2125 7D6E 20 C8 7D			jsr init_lms_lo_quarter
  2126 7D71 20 C8 7D			jsr init_lms_lo_quarter
  2127 7D74 20 C8 7D			jsr init_lms_lo_quarter
  2128 7D77 20 C8 7D			jsr init_lms_lo_quarter
  2129 					.endp
  2130
  2131 7D7A				.proc init_lms_hi
  2132 7D7A A9 02 85 B6 A9 95 + 	mwa #impdl+2 p2
  2133 7D82 A2 00			ldx #0			;Store hi bytes
  2134 7D84 A9 B9		loop	lda #$b9		;LDA_implhi+<X>,y
  2135 7D86 20 F7 3F			jsr poke
  2136 7D89 8A				txa
  2137 7D8A 18				clc
  2138 7D8B 69 00			adc #<implhi
  2139 7D8D 20 F7 3F			jsr poke
  2140 7D90 A9 94			lda #>implhi
  2141 7D92 20 F7 3F			jsr poke
  2142 7D95 A9 00			lda #0
  2143 7D97 20 B4 7D			jsr poke_sta
  2144 7D9A A9 C0			lda #offset
  2145 7D9C 20 B4 7D			jsr poke_sta
  2146
  2147 7D9F 18 A5 B6 69 03 85 + 	adw p2 #3
  2148 7DAA E8				inx
  2149 7DAB E0 40			cpx #lines
  2150 7DAD D0 D5			bne loop
  2151 					.endp
  2152
  2153 7DAF A9 60			lda #$60		;RTS.
  2154 7DB1 4C F7 3F			jmp poke
  2155 					
  2156 7DB4				.proc poke_sta		;IN:_<A>=offset
  2157 7DB4 48				pha
  2158 7DB5 A9 8D			lda #$8d		;STA_impdl+offset+<X>
  2159 7DB7 20 F7 3F			jsr poke
  2160 7DBA 68				pla
  2161 7DBB 18				clc
  2162 7DBC 65 B6			adc p2
  2163 7DBE 20 F7 3F			jsr poke
  2164 7DC1 A5 B7			lda p2+1
  2165 7DC3 69 00			adc #0
  2166 7DC5 4C F7 3F			jmp poke
  2167 					.endp
  2168
  2169 7DC8				.proc init_lms_lo_quarter
  2170 7DC8 A2 00			ldx #0
  2171 7DCA A9 00		loop	lda #0
  2172 7DCC 20 B4 7D			jsr poke_sta
  2173 7DCF 18 A5 B6 69 0C 85 + 	adw p2 #12
  2174 7DDA E8				inx
  2175 7DDB E8				inx
  2176 7DDC E8				inx
  2177 7DDD E8				inx
  2178 7DDE E0 80			cpx #[lines*2]
  2179 7DE0 90 E8			bcc loop
  2180 7DE2 38 A5 B6 E9 7D 85 + 	sbw p2 #[3*lines*2]-3
  2181 7DEF A9 18			lda #$18
  2182 7DF1 20 F7 3F			jsr poke
  2183 7DF4 A9 69			lda #$69
  2184 7DF6 20 F7 3F			jsr poke
  2185 7DF9 A9 40			lda #$40
  2186 7DFB 20 F7 3F			jsr poke
  2187 7DFE 60				rts
  2188 					.endp
  2189 					
  2190 					.endp
  2191
  2192
  2193 				;==============================================================
  2194 7DFF				.proc effect
  2195 7DFF A9 01			lda #1			;Fade_down_Screen.
  2196 7E01 20 43 45			jsr wait
  2197 7E04 A9 08			lda #8
  2198 7E06 85 E0			sta dliup
  2199 7E08 A9 10 85 04 A9 7C + 	mwa #impdli dlip
  2200 7E10 A9 00 8D 43 40 A9 + 	mwa #impdl visdl.jump
  2201 7E1A AD 0A D2			lda $d20a		;Set_Start_mode.
  2202 7E1D 29 03			and #3
  2203 7E1F 85 F3			sta impmode
  2204
  2205 7E21 A9 04			lda #4
  2206 7E23 85 BD			sta x2
  2207 7E25 A9 00		impres1	lda #0			;Reset_Position.
  2208 7E27 85 F0			sta impxpos
  2209 7E29 85 F1			sta impypos
  2210 7E2B AD 0A D2			lda $d20a
  2211 7E2E 29 F0			and #$f0
  2212 7E30 85 BC			sta x1
  2213 7E32 A2 07			ldx #7
  2214 7E34 BD 00 7C		impres2	lda imphtab,x		;Gen_new_Colortab.
  2215 7E37 29 0F			and #$0f
  2216 7E39 05 BC			ora x1
  2217 7E3B 9D 00 7C			sta imphtab,x
  2218 7E3E CA				dex
  2219 7E3F 10 F3			bpl impres2
  2220
  2221 7E41 A9 08			lda #8			;Short_delay.
  2222 7E43 20 7E 7E			jsr impeff
  2223
  2224 7E46 A9 02		impres3	lda #2
  2225 7E48 20 7E 7E			jsr impeff
  2226 7E4B C6 E0			dec dliup
  2227 7E4D D0 F7			bne impres3
  2228
  2229 7E4F A9 96			lda #150		;Do_Effect.
  2230 7E51 20 7E 7E			jsr impeff
  2231 7E54 A5 E6			lda keybrk
  2232 7E56 D0 05			bne impres4
  2233 7E58 A9 96			lda #150
  2234 7E5A 20 7E 7E			jsr impeff
  2235
  2236 7E5D E6 E0		impres4	inc dliup		;Fade_up.
  2237 7E5F A9 02			lda #2
  2238 7E61 20 7E 7E			jsr impeff
  2239 7E64 A5 E0			lda dliup
  2240 7E66 C9 08			cmp #8
  2241 7E68 D0 F3			bne impres4
  2242
  2243 7E6A A5 E6			lda keybrk		;User_broken_?_(he,he_...)
  2244 7E6C D0 0C			bne impres5
  2245
  2246 7E6E E6 F3			inc impmode		;Next_mode.
  2247 7E70 C6 BD			dec x2			;Last_time_?
  2248 7E72 D0 B1			bne impres1
  2249 7E74 A9 08			lda #8			;Short_delay.
  2250 7E76 20 7E 7E			jsr impeff
  2251 7E79 60				rts
  2252
  2253 7E7A 20 29 5C		impres5	jsr info.effect
  2254 7E7D 60				rts
  2255
  2256 				;===============================================================
  2257 7E7E				.proc impeff		;IN: <A>=number_of_frames
  2258 7E7E 85 BE			sta x3
  2259 7E80 A9 01		loop	lda #1
  2260 7E82 20 43 45			jsr wait
  2261
  2262 7E85 A6 BF			ldx cnt
  2263 7E87 BD 00 33			lda sintab5,x		;Do_Y_Sine.
  2264 7E8A 29 3F			and #63
  2265 7E8C 85 F1			sta impypos
  2266
  2267 7E8E A2 10			ldx #16
  2268 7E90 A5 F3			lda impmode		;Which_mode_?
  2269 7E92 4A				lsr
  2270 7E93 90 02			bcc impeff2
  2271 7E95 86 F0			stx impxpos		;Reset_X.
  2272 7E97 4A			impeff2	lsr
  2273 7E98 90 02			bcc impeff3
  2274 7E9A 86 F1			stx impypos		;Reset_Y.
  2275 7E9C			impeff3
  2276 7E9C A5 F0			lda impxpos
  2277 7E9E 4A				lsr
  2278 7E9F 85 BC			sta x1
  2279 7EA1 A5 F1			lda impypos
  2280 7EA3 29 3F			and #63
  2281 7EA5 A8				tay
  2282 7EA6 20 00 C0			jsr lmsrout3
  2283
  2284 7EA9 A5 F0			lda impxpos		;Gen_softscroll_value.
  2285 7EAB 29 01			and #1
  2286 7EAD 49 01			eor #1
  2287 7EAF 0A				asl
  2288 7EB0 85 F2			sta impsoft
  2289
  2290 7EB2 A5 F0			lda impxpos		;Move_Xpos.
  2291 7EB4 18				clc
  2292 7EB5 69 01			adc #1
  2293 7EB7 C9 12			cmp #18
  2294 7EB9 D0 02			bne *+4
  2295 7EBB A9 00			lda #0
  2296 7EBD 85 F0			sta impxpos
  2297
  2298 7EBF A5 E6			lda keybrk		;User_break_?
  2299 7EC1 D0 04			bne user_break
  2300
  2301 7EC3 C6 BE			dec x3
  2302 7EC5 D0 B9			bne loop
  2303 7EC7			user_break
  2304 7EC7 60				rts
  2305 					.endp
  2306 					.endp
  2307 					.endp
  2308
  2309 				;===============================================================
  2310 7EC8				.proc hidden
  2311 					
  2312 7EC8 A9 00			lda #0
  2313 7ECA 99 03 D4			sta $d40e-index,y
  2314 7ECD AA				tax
  2315 7ECE 9D FF CF		hidden1	sta $d000-1,x
  2316 7ED1 9D FF D1			sta $d200-1,x
  2317 7ED4 E8				inx
  2318 7ED5 D0 F7			bne hidden1
  2319
  2320 7ED7 A9 03			lda #3
  2321 7ED9 99 04 D2			sta $d20f-index,y
  2322 7EDC A9 1D			lda #<hiddl
  2323 7EDE 99 F7 D3			sta $d402-index,y
  2324 7EE1 A9 7F			lda #>hiddl
  2325 7EE3 99 F8 D3			sta $d403-index,y
  2326 7EE6 A9 34			lda #>txtchr
  2327 7EE8 99 FE D3			sta $d409-index,y
  2328 7EEB A9 21			lda #$21
  2329 7EED 99 F5 D3			sta $d400-index,y
  2330 7EF0 A9 08			lda #$8
  2331 7EF2 99 02 D0			sta $d00d-index,y
  2332
  2333 7EF5 B9 00 D4		hidden2	lda $d40b-index,y
  2334 7EF8 D0 FB			bne hidden2
  2335 7EFA A2 FA			ldx #250
  2336 7EFC AD 0A D2		hidden3	lda $d20a
  2337 7EFF 99 FF D3			sta $d40a-index,y
  2338 7F02 99 F5 CF			sta $d000-index,y
  2339 7F05 99 07 D0			sta $d012-index,y
  2340 7F08 CA				dex
  2341 7F09 D0 F1			bne hidden3
  2342 7F0B E6 BF			inc cnt
  2343 7F0D A5 BF			lda cnt
  2344 7F0F 29 1F			and #31
  2345 7F11 C9 10			cmp #16
  2346 7F13 90 02			bcc *+4
  2347 7F15 49 1F			eor #31
  2348 7F17 99 0C D0			sta $d017-index,y
  2349 7F1A 4C F5 7E			jmp hidden2
  2350
  2351 7F1D F0 E0 F0 E0 F0 E0 + hiddl	.byte $f0,$e0,$f0,$e0,$f0,$e0,$f0,$42
  2352 7F25 40 3A			.word hidtxt
  2353 7F27 F0 02 E0 02 F0 02 + 	.byte $f0,2,$e0,2,$f0,2,$41
  2354 7F2E 1D 7F			.word hiddl
  2355
  2356 					.endp
  2357
  2358
  2359 7F30			code_end
  2360 					.print "code_end: ",code_end
  2360 				code_end: $7F30
  2361
  2362 					.if code_end >$7fff
  2363 					.error "Code branches into $8000 at ",code_end
  2364 					.endif
  2365 				;===============================================================
  2366
  2367 7F30			visdom_data
  2368 7F30 00 00 01 12 22 33 + 	ins "Visdom-II-GtiaSplit.pic"	;Copied_to_1000.
  2369 8BB0 20 20 20 20 20 00 + 	ins "Visdom-II-Summer.dat"    	;Copied_to_1c80.
  2370
  2371 8ED0			sound_data
  2372 8ED0 4C A7 FA 00 4C C2 + 	ins "Visdom-II-Sound$ec00.snd"	;Copied_to_ec00.
  2373
  2374 02E0-02E1> 79 3F			run main
